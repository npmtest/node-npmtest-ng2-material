{"/home/travis/build/npmtest/node-npmtest-ng2-material/test.js":"/* istanbul instrument in package npmtest_ng2_material */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ng2-material/lib.npmtest_ng2_material.js":"/* istanbul instrument in package npmtest_ng2_material */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ng2_material = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ng2_material = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ng2-material/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ng2-material && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ng2_material */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ng2_material\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ng2_material.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ng2_material.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ng2_material.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ng2_material.__dirname + '/lib.npmtest_ng2_material.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/index.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar core_1 = require('@angular/core');\nvar content_1 = require('./components/content/content');\nvar index_1 = require('./components/data-table/index');\nvar divider_1 = require('./components/divider/divider');\nvar index_2 = require('./components/pagination/index');\nvar peekaboo_1 = require('./components/peekaboo/peekaboo');\nvar subheader_1 = require('./components/subheader/subheader');\nvar media_1 = require('./core/util/media');\nvar viewport_1 = require('./core/util/viewport');\nvar dialog_module_1 = require('./components/dialog/dialog.module');\nvar backdrop_1 = require('./components/backdrop/backdrop');\nvar util_module_1 = require('./core/util/util.module');\n__export(require('./components/backdrop/backdrop'));\n__export(require('./components/content/content'));\n__export(require('./components/data-table/index'));\n__export(require('./components/dialog/index'));\n__export(require('./components/divider/divider'));\n__export(require('./components/pagination/index'));\n__export(require('./components/peekaboo/peekaboo'));\n__export(require('./components/subheader/subheader'));\n__export(require('./core/util/media'));\n__export(require('./core/util/viewport'));\n__export(require('./core/util/animate'));\nexports.MATERIAL_NODE_PROVIDERS = [\n    { provide: viewport_1.ViewportHelper, useClass: viewport_1.NodeViewportHelper },\n    media_1.Media\n];\nexports.MATERIAL_BROWSER_PROVIDERS = exports.MATERIAL_NODE_PROVIDERS.concat([\n    { provide: viewport_1.ViewportHelper, useClass: viewport_1.BrowserViewportHelper },\n]);\nvar MATERIAL_MODULES = [\n    backdrop_1.MdBackdropModule,\n    content_1.MdContentModule,\n    index_1.MdDataTableModule,\n    dialog_module_1.MdDialogModule,\n    divider_1.MdDividerModule,\n    index_2.MdPaginationModule,\n    peekaboo_1.MdPeekabooModule,\n    subheader_1.MdSubheaderModule,\n    util_module_1.MdServicesModule\n];\nvar Ng2MaterialNodeModule = (function () {\n    function Ng2MaterialNodeModule() {\n    }\n    Ng2MaterialNodeModule.forRoot = function () {\n        return {\n            ngModule: Ng2MaterialNodeModule,\n            providers: exports.MATERIAL_NODE_PROVIDERS\n        };\n    };\n    Ng2MaterialNodeModule = __decorate([\n        core_1.NgModule({\n            exports: MATERIAL_MODULES,\n            imports: MATERIAL_MODULES\n        }), \n        __metadata('design:paramtypes', [])\n    ], Ng2MaterialNodeModule);\n    return Ng2MaterialNodeModule;\n}());\nexports.Ng2MaterialNodeModule = Ng2MaterialNodeModule;\nvar Ng2MaterialModule = (function () {\n    function Ng2MaterialModule() {\n    }\n    Ng2MaterialModule.forRoot = function () {\n        return {\n            ngModule: Ng2MaterialModule,\n            providers: exports.MATERIAL_BROWSER_PROVIDERS\n        };\n    };\n    Ng2MaterialModule = __decorate([\n        core_1.NgModule({\n            exports: MATERIAL_MODULES,\n            imports: MATERIAL_MODULES\n        }), \n        __metadata('design:paramtypes', [])\n    ], Ng2MaterialModule);\n    return Ng2MaterialModule;\n}());\nexports.Ng2MaterialModule = Ng2MaterialModule;\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/content/content.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar MdContent = (function () {\n    function MdContent() {\n    }\n    MdContent = __decorate([\n        core_1.Directive({ selector: 'md-content' }), \n        __metadata('design:paramtypes', [])\n    ], MdContent);\n    return MdContent;\n}());\nvar MdContentModule = (function () {\n    function MdContentModule() {\n    }\n    MdContentModule = __decorate([\n        core_1.NgModule({\n            declarations: [MdContent],\n            exports: [MdContent]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdContentModule);\n    return MdContentModule;\n}());\nexports.MdContentModule = MdContentModule;\n//# sourceMappingURL=content.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/.baseDir.js":"//# sourceMappingURL=.baseDir.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/key_codes.js":"\"use strict\";\n(function (KeyCodes) {\n    KeyCodes[KeyCodes[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    KeyCodes[KeyCodes[\"SPACE\"] = 32] = \"SPACE\";\n    KeyCodes[KeyCodes[\"UP\"] = 38] = \"UP\";\n    KeyCodes[KeyCodes[\"DOWN\"] = 40] = \"DOWN\";\n})(exports.KeyCodes || (exports.KeyCodes = {}));\nvar KeyCodes = exports.KeyCodes;\n//# sourceMappingURL=key_codes.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/backdrop/backdrop.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar animate_1 = require('../../core/util/animate');\nvar core_1 = require('@angular/core');\nvar viewport_1 = require('../../core/util/viewport');\nvar util_module_1 = require('../../core/util/util.module');\nvar MdBackdrop = (function () {\n    function MdBackdrop(element, viewport) {\n        this.element = element;\n        this.viewport = viewport;\n        this.clickClose = false;\n        this.hideScroll = true;\n        this.onHiding = new core_1.EventEmitter(false);\n        this.onHidden = new core_1.EventEmitter(false);\n        this.onShowing = new core_1.EventEmitter();\n        this.onShown = new core_1.EventEmitter();\n        this.transitionClass = 'md-active';\n        this.transitionAddClass = true;\n        this._visible = false;\n        this._transitioning = false;\n        this._previousOverflow = null;\n        this._body = document.body;\n    }\n    Object.defineProperty(MdBackdrop.prototype, \"visible\", {\n        get: function () {\n            return this._visible;\n        },\n        set: function (value) {\n            this.toggle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdBackdrop.prototype.onClick = function () {\n        if (this.clickClose && !this._transitioning && this.visible) {\n            this.hide();\n        }\n    };\n    MdBackdrop.prototype.hide = function () {\n        return this.toggle(false);\n    };\n    MdBackdrop.prototype.show = function () {\n        return this.toggle(true);\n    };\n    MdBackdrop.prototype.toggle = function (visible) {\n        var _this = this;\n        if (visible === void 0) { visible = !this.visible; }\n        if (visible === this._visible) {\n            return Promise.resolve();\n        }\n        var beginEvent = visible ? this.onShowing : this.onHiding;\n        var endEvent = visible ? this.onShown : this.onHidden;\n        this._visible = visible;\n        this._transitioning = true;\n        beginEvent.emit(this);\n        var action = visible ?\n            (this.transitionAddClass ? animate_1.Animate.enter : animate_1.Animate.leave) :\n            (this.transitionAddClass ? animate_1.Animate.leave : animate_1.Animate.enter);\n        if (visible && this.hideScroll && this.element && !this._previousOverflow) {\n            var style = this._body.style['overflow'];\n            if (style !== 'hidden') {\n                this._previousOverflow = style;\n                this._body.style['overflow'] = 'hidden';\n            }\n        }\n        else if (!visible && this.hideScroll && this.element && this._previousOverflow !== null) {\n            this._body.style['overflow'] = this._previousOverflow;\n            this._previousOverflow = null;\n        }\n        return action(this.element.nativeElement, this.transitionClass).then(function () {\n            _this._transitioning = false;\n            endEvent.emit(_this);\n        });\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean)\n    ], MdBackdrop.prototype, \"clickClose\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean)\n    ], MdBackdrop.prototype, \"hideScroll\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdBackdrop.prototype, \"onHiding\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdBackdrop.prototype, \"onHidden\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdBackdrop.prototype, \"onShowing\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdBackdrop.prototype, \"onShown\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdBackdrop.prototype, \"transitionClass\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MdBackdrop.prototype, \"transitionAddClass\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean)\n    ], MdBackdrop.prototype, \"visible\", null);\n    MdBackdrop = __decorate([\n        core_1.Component({\n            selector: 'md-backdrop',\n            template: '',\n            encapsulation: core_1.ViewEncapsulation.None,\n            host: {\n                'class': 'md-backdrop',\n                '(click)': 'onClick()',\n            },\n        }), \n        __metadata('design:paramtypes', [core_1.ElementRef, viewport_1.ViewportHelper])\n    ], MdBackdrop);\n    return MdBackdrop;\n}());\nexports.MdBackdrop = MdBackdrop;\nvar MdBackdropModule = (function () {\n    function MdBackdropModule() {\n    }\n    MdBackdropModule = __decorate([\n        core_1.NgModule({\n            declarations: [MdBackdrop],\n            exports: [MdBackdrop],\n            imports: [util_module_1.MdServicesModule]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdBackdropModule);\n    return MdBackdropModule;\n}());\nexports.MdBackdropModule = MdBackdropModule;\n//# sourceMappingURL=backdrop.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/util/animate.js":"\"use strict\";\nvar Animate = (function () {\n    function Animate() {\n    }\n    Animate.enter = function (el, cssClass) {\n        el.classList.remove(cssClass);\n        return new Promise(function (resolve) {\n            el.classList.add(cssClass + '-add');\n            setTimeout(function () {\n                var duration = Animate.getTransitionDuration(el, true);\n                var removeListener = function () { return done(false); };\n                var callTimeout = setTimeout(function () { return done(true); }, duration);\n                var done = function (timeout) {\n                    if (!removeListener) {\n                        return;\n                    }\n                    el.classList.remove(cssClass + '-add-active');\n                    el.classList.remove(cssClass + '-add');\n                    if (!timeout) {\n                        clearTimeout(callTimeout);\n                    }\n                    el.removeEventListener(Animate.TRANSITION_EVENT, removeListener);\n                    removeListener = null;\n                    resolve();\n                };\n                el.addEventListener(Animate.TRANSITION_EVENT, removeListener);\n                el.classList.add(cssClass + '-add-active');\n                el.classList.add(cssClass);\n            }, 1);\n        });\n    };\n    Animate.leave = function (el, cssClass) {\n        return new Promise(function (resolve) {\n            el.classList.add(cssClass + '-remove');\n            setTimeout(function () {\n                var duration = Animate.getTransitionDuration(el, true);\n                var callTimeout = setTimeout(function () { return done(true); }, duration);\n                var removeListener = function () { return done(false); };\n                var done = function (timeout) {\n                    if (!removeListener) {\n                        return;\n                    }\n                    el.classList.remove(cssClass + '-remove-active');\n                    el.classList.remove(cssClass + '-remove');\n                    if (!timeout) {\n                        clearTimeout(callTimeout);\n                    }\n                    el.removeEventListener(Animate.TRANSITION_EVENT, removeListener);\n                    removeListener = null;\n                    resolve();\n                };\n                el.addEventListener(Animate.TRANSITION_EVENT, removeListener);\n                el.classList.add(cssClass + '-remove-active');\n                el.classList.remove(cssClass);\n            }, 1);\n        });\n    };\n    Animate.getTransitionDuration = function (element, includeDelay) {\n        if (includeDelay === void 0) { includeDelay = false; }\n        var prefixes = ['', 'moz', 'webkit', 'ms', 'o', 'khtml'];\n        var style = window.getComputedStyle(element);\n        for (var i = 0; i < prefixes.length; i++) {\n            var durationProperty = (i === 0 ? '' : \"-\" + prefixes[i] + \"-\") + \"transition-duration\";\n            var duration = style[durationProperty];\n            if (!duration) {\n                continue;\n            }\n            duration = (duration.indexOf('ms') > -1) ? parseFloat(duration) : parseFloat(duration) * 1000;\n            if (duration === 0) {\n                continue;\n            }\n            if (includeDelay) {\n                var delayProperty = (i === 0 ? '' : \"-\" + prefixes[i] + \"-\") + \"transition-delay\";\n                var delay = style[delayProperty];\n                if (typeof delay !== 'undefined') {\n                    duration += (delay.indexOf('ms') > -1) ? parseFloat(delay) : parseFloat(delay) * 1000;\n                }\n            }\n            return duration;\n        }\n        return -1;\n    };\n    Animate.setTransitionDuration = function (element, delayMs) {\n        element.style['transition-duration'] = delayMs + \"ms\";\n    };\n    Animate.whichTransitionEvent = function () {\n        if (typeof document === 'undefined') {\n            return 'transitionend';\n        }\n        var t;\n        var el = document.createElement('fakeelement');\n        var transitions = {\n            'transition': 'transitionend',\n            'OTransition': 'oTransitionEnd',\n            'MozTransition': 'transitionend',\n            'WebkitTransition': 'webkitTransitionEnd'\n        };\n        for (t in transitions) {\n            if (el.style[t] !== undefined) {\n                return transitions[t];\n            }\n        }\n    };\n    Animate.setStyles = function (element, styles) {\n        var saveDuration = Animate.getTransitionDuration(element);\n        Animate.setTransitionDuration(element, 0);\n        return new Promise(function (resolve, reject) {\n            Object.keys(styles).forEach(function (key) {\n                element.style[key] = \"\" + styles[key];\n            });\n            if (saveDuration !== -1) {\n                Animate.setTransitionDuration(element, saveDuration);\n            }\n            else {\n                element.style['transition-duration'] = null;\n            }\n            resolve();\n        });\n    };\n    Animate.wait = function (milliseconds) {\n        if (milliseconds === void 0) { milliseconds = 10; }\n        return new Promise(function (resolve) {\n            setTimeout(function () { return resolve(); }, milliseconds);\n        });\n    };\n    Animate.TRANSITION_EVENT = Animate.whichTransitionEvent();\n    return Animate;\n}());\nexports.Animate = Animate;\n//# sourceMappingURL=animate.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/util/viewport.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar ViewportHelper = (function () {\n    function ViewportHelper() {\n    }\n    ViewportHelper = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [])\n    ], ViewportHelper);\n    return ViewportHelper;\n}());\nexports.ViewportHelper = ViewportHelper;\nvar BrowserViewportHelper = (function (_super) {\n    __extends(BrowserViewportHelper, _super);\n    function BrowserViewportHelper() {\n        _super.apply(this, arguments);\n    }\n    BrowserViewportHelper.prototype.getDocumentNativeElement = function () {\n        return window.document;\n    };\n    BrowserViewportHelper.prototype.requestFrame = function (fn) {\n        return window.requestAnimationFrame(fn);\n    };\n    BrowserViewportHelper.prototype.matchMedia = function (query) {\n        return window.matchMedia(query);\n    };\n    BrowserViewportHelper.prototype.scrollTop = function () {\n        return window.pageYOffset || document.documentElement.scrollTop;\n    };\n    return BrowserViewportHelper;\n}(ViewportHelper));\nexports.BrowserViewportHelper = BrowserViewportHelper;\nvar NodeViewportMediaMatch = (function () {\n    function NodeViewportMediaMatch(matches, media) {\n        if (matches === void 0) { matches = false; }\n        if (media === void 0) { media = ''; }\n        this.matches = matches;\n        this.media = media;\n    }\n    NodeViewportMediaMatch.prototype.addListener = function (listener) {\n    };\n    NodeViewportMediaMatch.prototype.removeListener = function (listener) {\n    };\n    return NodeViewportMediaMatch;\n}());\nexports.NodeViewportMediaMatch = NodeViewportMediaMatch;\nvar NodeViewportHelper = (function (_super) {\n    __extends(NodeViewportHelper, _super);\n    function NodeViewportHelper() {\n        _super.apply(this, arguments);\n    }\n    NodeViewportHelper.prototype.getDocumentNativeElement = function () {\n        return {};\n    };\n    NodeViewportHelper.prototype.requestFrame = function (fn) {\n        return process.nextTick(fn);\n    };\n    NodeViewportHelper.prototype.matchMedia = function (query) {\n        return new NodeViewportMediaMatch(false, query);\n    };\n    NodeViewportHelper.prototype.scrollTop = function () {\n        return 0;\n    };\n    return NodeViewportHelper;\n}(ViewportHelper));\nexports.NodeViewportHelper = NodeViewportHelper;\n//# sourceMappingURL=viewport.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/backdrop/backdrop_spec.js":"\"use strict\";\nvar testing_1 = require('@angular/core/testing');\nvar util_1 = require('../../platform/testing/util');\nvar backdrop_1 = require('./backdrop');\nvar util_module_1 = require('../../core/util/util.module');\ndescribe('Backdrop', function () {\n    beforeEach(function () {\n        testing_1.TestBed.configureTestingModule({\n            declarations: [backdrop_1.MdBackdrop],\n            imports: [util_module_1.MdServicesModule],\n            providers: []\n        });\n    });\n    function setup(show, transitionAddClass) {\n        if (show === void 0) { show = false; }\n        if (transitionAddClass === void 0) { transitionAddClass = true; }\n        var result = null;\n        return testing_1.TestBed.compileComponents()\n            .then(function () {\n            var fixture = testing_1.TestBed.createComponent(backdrop_1.MdBackdrop);\n            var debug = fixture.debugElement;\n            var backdrop = fixture.componentInstance;\n            backdrop.transitionAddClass = transitionAddClass;\n            fixture.detectChanges();\n            result = {\n                fixture: fixture,\n                debug: debug,\n                backdrop: backdrop\n            };\n            if (show) {\n                return backdrop.show();\n            }\n        })\n            .then(function () { return result; })\n            .catch(function (error) { return console.error.bind(console); });\n    }\n    describe('md-backdrop', function () {\n        describe('transitionClass', function () {\n            it('should be added to classList when shown', testing_1.async(function () {\n                return setup(true).then(function (api) {\n                    util_1.promiseWait().then(function () {\n                        api.fixture.detectChanges();\n                        var el = api.debug.nativeElement;\n                        expect(el.classList.contains(api.backdrop.transitionClass)).toBe(true);\n                    });\n                });\n            }));\n            it('should be removed from classList when hidden', testing_1.async(function () {\n                return setup(true).then(function (api) {\n                    return util_1.promiseWait().then(function () {\n                        var el = api.debug.nativeElement;\n                        expect(el.classList.contains(api.backdrop.transitionClass)).toBe(true);\n                        return api.backdrop\n                            .hide()\n                            .then(function () { return util_1.promiseWait(); })\n                            .then(function () {\n                            expect(el.classList.contains(api.backdrop.transitionClass)).toBe(false);\n                        });\n                    });\n                });\n            }));\n        });\n        describe('transitionAddClass=false', function () {\n            it('should remove transitionClass when shown', testing_1.async(function () {\n                return setup(false, false).then(function (api) {\n                    var el = api.debug.nativeElement;\n                    expect(el.classList.contains(api.backdrop.transitionClass)).toBe(false);\n                    el.classList.contains(api.backdrop.transitionClass);\n                    return api.backdrop.show().then(function () {\n                        expect(el.classList.contains(api.backdrop.transitionClass)).toBe(false);\n                    });\n                });\n            }));\n            it('should add transitionClass when hidden', testing_1.async(function () {\n                return setup(true, false).then(function (api) {\n                    var el = api.debug.nativeElement;\n                    expect(el.classList.contains(api.backdrop.transitionClass)).toBe(false);\n                    return api.backdrop.hide().then(function () {\n                        expect(el.classList.contains(api.backdrop.transitionClass)).toBe(true);\n                    });\n                });\n            }));\n        });\n        describe('clickClose', function () {\n            it('should be hidden by a click when true', testing_1.async(function () {\n                return setup(true).then(function (api) {\n                    var triggered = false;\n                    api.backdrop.clickClose = true;\n                    api.backdrop.hide = function () {\n                        triggered = true;\n                        return Promise.resolve();\n                    };\n                    api.debug.nativeElement.click();\n                    expect(triggered).toBe(true);\n                })\n                    .catch(function (error) { return console.error.bind(console); });\n            }));\n            it('should not be hidden when clickClose is false', testing_1.async(function () {\n                return setup(true).then(function (api) {\n                    var triggered = false;\n                    api.backdrop.clickClose = false;\n                    api.backdrop.hide = function () {\n                        triggered = true;\n                        return Promise.resolve();\n                    };\n                    api.debug.nativeElement.click();\n                    expect(triggered).toBe(false);\n                })\n                    .catch(function (error) { return console.error.bind(console); });\n            }));\n            it('should not be clickable during transition animation', testing_1.async(function () {\n                return setup().then(function (api) {\n                    var triggered = false;\n                    api.backdrop.clickClose = true;\n                    api.backdrop.hide = function () {\n                        triggered = true;\n                        return Promise.resolve();\n                    };\n                    var promise = api.backdrop.show();\n                    api.debug.nativeElement.click();\n                    expect(triggered).toBe(false);\n                    return promise.then(function () {\n                        expect(triggered).toBe(false);\n                        api.debug.nativeElement.click();\n                        expect(triggered).toBe(true);\n                    });\n                })\n                    .catch(function (error) { return console.error.bind(console); });\n            }));\n        });\n        describe('show', function () {\n            it('emit events before and after being shown', function () {\n                return setup().then(function (api) {\n                    var changes = [];\n                    expect(api.backdrop.visible).toBe(false);\n                    api.backdrop.onShowing.subscribe(function () { return changes.push('showing'); });\n                    api.backdrop.onShown.subscribe(function () { return changes.push('shown'); });\n                    return api.backdrop\n                        .show()\n                        .then(function () { return util_1.promiseWait(); })\n                        .then(function () {\n                        expect(changes.length).toBe(2);\n                        expect(changes[0]).toBe('showing');\n                        expect(changes[1]).toBe('shown');\n                    });\n                });\n            });\n            it('does not emit events events if already shown', testing_1.async(function () {\n                return setup(true).then(function (api) {\n                    var changes = 0;\n                    api.backdrop.onShowing.subscribe(function () { return changes++; });\n                    api.backdrop.onShown.subscribe(function () { return changes++; });\n                    return api.backdrop\n                        .show()\n                        .then(function () { return util_1.promiseWait(); })\n                        .then(function () {\n                        expect(changes).toBe(0);\n                    });\n                })\n                    .catch(function (error) { return console.error.bind(console); });\n            }));\n        });\n        describe('hide', function () {\n            it('hide emits events before and after being hidden', testing_1.async(function () {\n                return setup(true).then(function (api) {\n                    var changes = [];\n                    api.backdrop.onHiding.subscribe(function () { return changes.push('hiding'); });\n                    api.backdrop.onHidden.subscribe(function () { return changes.push('hidden'); });\n                    return api.backdrop\n                        .hide()\n                        .then(function () { return util_1.promiseWait(); })\n                        .then(function () {\n                        expect(changes.length).toBe(2);\n                        expect(changes[0]).toBe('hiding');\n                        expect(changes[1]).toBe('hidden');\n                    });\n                })\n                    .catch(function (error) { return console.error.bind(console); });\n            }));\n            it('does not emit events events if already hidden', testing_1.async(function () {\n                return setup().then(function (api) {\n                    var changes = 0;\n                    expect(api.backdrop.visible).toBe(false);\n                    api.backdrop.onHiding.subscribe(function () { return changes++; });\n                    api.backdrop.onHidden.subscribe(function () { return changes++; });\n                    return api.backdrop\n                        .hide()\n                        .then(function () { return util_1.promiseWait(); })\n                        .then(function () {\n                        expect(changes).toBe(0);\n                    });\n                })\n                    .catch(function (error) { return console.error.bind(console); });\n            }));\n        });\n    });\n});\n//# sourceMappingURL=backdrop_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/content/content_spec.js":"\"use strict\";\nvar util_1 = require('../../platform/testing/util');\nutil_1.componentSanityCheck('Content', 'md-content', \"<md-content>Content!</md-content>\");\n//# sourceMappingURL=content_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/platform/testing/util.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar testing_1 = require('@angular/core/testing');\nvar index_1 = require('../../index');\nfunction promiseWait(milliseconds) {\n    if (milliseconds === void 0) { milliseconds = 10; }\n    return new Promise(function (resolve) {\n        setTimeout(function () { return resolve(); }, milliseconds);\n    });\n}\nexports.promiseWait = promiseWait;\nfunction componentSanityCheck(name, selector, template) {\n    var TestComponent = (function () {\n        function TestComponent() {\n        }\n        TestComponent = __decorate([\n            core_1.Component({\n                selector: 'test-app',\n                template: template\n            }), \n            __metadata('design:paramtypes', [])\n        ], TestComponent);\n        return TestComponent;\n    }());\n    describe(name, function () {\n        beforeEach(function () {\n            testing_1.TestBed.configureTestingModule({\n                declarations: [\n                    TestComponent\n                ],\n                imports: [index_1.Ng2MaterialModule],\n                providers: []\n            });\n        });\n        function setup(template) {\n            if (template === void 0) { template = null; }\n            if (template) {\n                testing_1.TestBed.overrideComponent(TestComponent, {\n                    set: {\n                        template: template\n                    }\n                });\n            }\n            return testing_1.TestBed.compileComponents()\n                .then(function () {\n                var fixture = testing_1.TestBed.createComponent(TestComponent);\n                fixture.detectChanges();\n                return fixture.whenStable().then(function () { return fixture; });\n            })\n                .catch(function (error) {\n                return console.error(error);\n            });\n        }\n        describe(selector, function () {\n            it('should instantiate component without fail', testing_1.async(function () {\n                setup().then(function () { return promiseWait(); });\n            }));\n            it('should destroy component without fail', testing_1.async(function () {\n                setup()\n                    .then(function (api) {\n                    return api.destroy();\n                })\n                    .then(function () { return promiseWait(); });\n            }));\n        });\n    });\n}\nexports.componentSanityCheck = componentSanityCheck;\n//# sourceMappingURL=util.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/data-table/data_table.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar core_1 = require('@angular/core');\nvar material_1 = require(\"@angular/material\");\nrequire('rxjs/add/operator/share');\nvar data_table_selectable_tr_1 = require('./data_table_selectable_tr');\n__export(require('./data_table_selectable_tr'));\nvar MdDataTable = (function () {\n    function MdDataTable() {\n        this.onSelectableAll = new core_1.EventEmitter(false);\n        this.onSelectableChange = new core_1.EventEmitter(false);\n        this._listeners = [];\n        this.selected = [];\n        this.onSelectableChange.share();\n    }\n    MdDataTable.prototype.change = function (event) {\n        var outputEvent = {\n            name: 'selectable_change',\n            allSelected: false,\n            values: []\n        };\n        if (event.target instanceof data_table_selectable_tr_1.MdDataTableHeaderSelectableRow === true) {\n            if (event.isActive === true) {\n                outputEvent.allSelected = true;\n                outputEvent.values = this._getRowsValues();\n            }\n        }\n        else {\n            outputEvent.values = this.selected.slice(0);\n            if (event.isActive === true) {\n                outputEvent.values.push(event.selectableValue);\n            }\n            else {\n                var index = outputEvent.values.indexOf(event.selectableValue);\n                if (index !== -1) {\n                    outputEvent.values.splice(index, 1);\n                }\n            }\n        }\n        this.selected = outputEvent.values;\n        this.onSelectableChange.emit(outputEvent);\n    };\n    MdDataTable.prototype._getRowsValues = function () {\n        return this._rows.toArray()\n            .map(function (tr) { return tr.selectableValue; });\n    };\n    MdDataTable.prototype._unsubscribeChildren = function () {\n        this.selected = [];\n        if (this._listeners.length) {\n            this._listeners.forEach(function (listener) {\n                listener.unsubscribe();\n            });\n            this._listeners = [];\n        }\n    };\n    MdDataTable.prototype._updateChildrenListener = function (list) {\n        var _this = this;\n        this._unsubscribeChildren();\n        list.toArray()\n            .map(function (tr) {\n            tr.onChange.subscribe(_this.change.bind(_this));\n        });\n    };\n    MdDataTable.prototype.ngAfterContentInit = function () {\n        if (this.selectable === true) {\n            if (!!this._masterRow) {\n                this._masterRow.onChange.subscribe(this.change.bind(this));\n            }\n            this._rows.changes.subscribe(this._updateChildrenListener.bind(this));\n            this._updateChildrenListener(this._rows);\n        }\n    };\n    MdDataTable.prototype.ngOnDestroy = function () {\n        this._unsubscribeChildren();\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean)\n    ], MdDataTable.prototype, \"selectable\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdDataTable.prototype, \"onSelectableAll\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdDataTable.prototype, \"onSelectableChange\", void 0);\n    __decorate([\n        core_1.ContentChild(data_table_selectable_tr_1.MdDataTableHeaderSelectableRow), \n        __metadata('design:type', data_table_selectable_tr_1.MdDataTableHeaderSelectableRow)\n    ], MdDataTable.prototype, \"_masterRow\", void 0);\n    __decorate([\n        core_1.ContentChildren(data_table_selectable_tr_1.MdDataTableSelectableRow, true), \n        __metadata('design:type', core_1.QueryList)\n    ], MdDataTable.prototype, \"_rows\", void 0);\n    MdDataTable = __decorate([\n        core_1.Component({\n            selector: 'md-data-table',\n            template: \"<ng-content></ng-content>\",\n            host: {\n                '[class.md-data-table]': 'true',\n                '[class.md-data-table-selectable]': 'selectable',\n            }\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdDataTable);\n    return MdDataTable;\n}());\nexports.MdDataTable = MdDataTable;\nvar DATA_TABLE_DIRECTIVES = [\n    MdDataTable,\n    data_table_selectable_tr_1.MdDataTableHeaderSelectableRow,\n    data_table_selectable_tr_1.MdDataTableSelectableRow\n];\nvar MdDataTableModule = (function () {\n    function MdDataTableModule() {\n    }\n    MdDataTableModule = __decorate([\n        core_1.NgModule({\n            declarations: DATA_TABLE_DIRECTIVES,\n            exports: DATA_TABLE_DIRECTIVES,\n            imports: [\n                material_1.MdCheckboxModule\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdDataTableModule);\n    return MdDataTableModule;\n}());\nexports.MdDataTableModule = MdDataTableModule;\n//# sourceMappingURL=data_table.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/data-table/data_table_selectable_tr.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = require(\"@angular/core\");\nrequire('rxjs/add/operator/share');\nrequire('rxjs/add/operator/map');\nvar data_table_1 = require('./data_table');\nvar AbstractMdDataTableSelectableRow = (function () {\n    function AbstractMdDataTableSelectableRow(table, _element) {\n        this.table = table;\n        this._element = _element;\n        this.onChange = new core_1.EventEmitter(false);\n        this.isActive = false;\n        this.onChange.share();\n    }\n    AbstractMdDataTableSelectableRow.prototype.change = function (event) {\n        if (event.target.classList.contains('md-checkbox-inner-container')) {\n            event.preventDefault();\n        }\n        this.isActive = !this.isActive;\n        var changeEvent = {\n            name: 'selectable_row_change',\n            target: this,\n            isActive: this.isActive,\n            selectableValue: this.selectableValue\n        };\n        this.onChange.emit(changeEvent);\n    };\n    AbstractMdDataTableSelectableRow.prototype.ngAfterContentInit = function () { };\n    __decorate([\n        core_1.Input('selectable-value'), \n        __metadata('design:type', String)\n    ], AbstractMdDataTableSelectableRow.prototype, \"selectableValue\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], AbstractMdDataTableSelectableRow.prototype, \"onChange\", void 0);\n    AbstractMdDataTableSelectableRow = __decorate([\n        __param(0, core_1.Optional()),\n        __param(0, core_1.Inject(core_1.forwardRef(function () { return data_table_1.MdDataTable; }))), \n        __metadata('design:paramtypes', [data_table_1.MdDataTable, core_1.ElementRef])\n    ], AbstractMdDataTableSelectableRow);\n    return AbstractMdDataTableSelectableRow;\n}());\nexports.AbstractMdDataTableSelectableRow = AbstractMdDataTableSelectableRow;\nvar MdDataTableHeaderSelectableRow = (function (_super) {\n    __extends(MdDataTableHeaderSelectableRow, _super);\n    function MdDataTableHeaderSelectableRow(table, _element) {\n        _super.call(this, table, _element);\n        this.table = table;\n        this._element = _element;\n    }\n    MdDataTableHeaderSelectableRow.prototype._bindListener = function () {\n        var _this = this;\n        this.table.onSelectableChange\n            .map(function (event) { return event.allSelected; })\n            .subscribe(function (newActiveStatus) { return _this.isActive = newActiveStatus; });\n    };\n    MdDataTableHeaderSelectableRow.prototype.ngAfterContentInit = function () {\n        if (!!this.table) {\n            this._bindListener();\n        }\n    };\n    MdDataTableHeaderSelectableRow = __decorate([\n        core_1.Component({\n            selector: 'tr[md-data-table-header-selectable-row]',\n            template: \"\\n        <th class=\\\"md-data-check-cell\\\">\\n            <md-checkbox [checked]=\\\"isActive\\\"></md-checkbox>\\n        </th>\\n        <ng-content></ng-content>\\n    \",\n            host: {\n                '[class.active]': 'isActive',\n                '(click)': 'change($event)'\n            }\n        }),\n        __param(0, core_1.Optional()),\n        __param(0, core_1.Inject(core_1.forwardRef(function () { return data_table_1.MdDataTable; }))), \n        __metadata('design:paramtypes', [data_table_1.MdDataTable, core_1.ElementRef])\n    ], MdDataTableHeaderSelectableRow);\n    return MdDataTableHeaderSelectableRow;\n}(AbstractMdDataTableSelectableRow));\nexports.MdDataTableHeaderSelectableRow = MdDataTableHeaderSelectableRow;\nvar MdDataTableSelectableRow = (function (_super) {\n    __extends(MdDataTableSelectableRow, _super);\n    function MdDataTableSelectableRow(table, _element) {\n        _super.call(this, table, _element);\n        this.table = table;\n        this._element = _element;\n    }\n    MdDataTableSelectableRow.prototype._getIndex = function (element) {\n        return Array.prototype.indexOf.call(element.parentNode.children, element).toString();\n    };\n    MdDataTableSelectableRow.prototype._bindListener = function () {\n        var _this = this;\n        this.table.onSelectableChange\n            .map(function (event) {\n            return event.values !== undefined &&\n                event.values.length &&\n                (event.values.findIndex(function (value) { return value === _this.selectableValue; })) !== -1;\n        })\n            .subscribe(function (newActiveStatus) { return _this.isActive = newActiveStatus; });\n    };\n    MdDataTableSelectableRow.prototype.ngAfterContentInit = function () {\n        var element = this._element.nativeElement;\n        if (this.selectableValue === undefined) {\n            this.selectableValue = this._getIndex(element);\n        }\n        if (!!this.table) {\n            this._bindListener();\n        }\n    };\n    MdDataTableSelectableRow = __decorate([\n        core_1.Component({\n            selector: 'tr[md-data-table-selectable-row]',\n            template: \"\\n        <td class=\\\"md-data-check-cell\\\">\\n          <md-checkbox [checked]=\\\"isActive\\\"></md-checkbox>\\n        </td>\\n        <ng-content></ng-content>\\n    \",\n            host: {\n                '[class.active]': 'isActive',\n                '(click)': 'change($event)'\n            }\n        }),\n        __param(0, core_1.Optional()),\n        __param(0, core_1.Inject(core_1.forwardRef(function () { return data_table_1.MdDataTable; }))), \n        __metadata('design:paramtypes', [data_table_1.MdDataTable, core_1.ElementRef])\n    ], MdDataTableSelectableRow);\n    return MdDataTableSelectableRow;\n}(AbstractMdDataTableSelectableRow));\nexports.MdDataTableSelectableRow = MdDataTableSelectableRow;\n//# sourceMappingURL=data_table_selectable_tr.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/data-table/data_table_spec.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar util_1 = require('../../platform/testing/util');\nvar testing_1 = require('@angular/core/testing');\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar index_1 = require('./index');\nvar common_1 = require('@angular/common');\nvar material_1 = require('@angular/material');\nvar TestComponent = (function () {\n    function TestComponent() {\n        this.selected = [];\n    }\n    TestComponent = __decorate([\n        core_1.Component({\n            selector: 'test-app',\n            template: \"<md-data-table [selectable]=\\\"true\\\">\\n      <thead>\\n        <tr md-data-table-header-selectable-row>\\n          <th>Unit price</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr md-data-table-selectable-row>\\n          <td>$2.90</td>\\n        </tr>\\n        <tr md-data-table-selectable-row>\\n          <td>$1.25</td>\\n        </tr>\\n      </tbody>\\n    </md-data-table>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], TestComponent);\n    return TestComponent;\n}());\nutil_1.componentSanityCheck('Data table', 'md-data-table', \"<md-data-table></md-data-table>\");\ndescribe('Data table', function () {\n    beforeEach(function () {\n        testing_1.TestBed.configureTestingModule({\n            declarations: [\n                index_1.MdDataTable,\n                index_1.MdDataTableSelectableRow,\n                index_1.MdDataTableHeaderSelectableRow,\n                TestComponent\n            ],\n            imports: [common_1.CommonModule, material_1.MdCheckboxModule],\n            providers: []\n        });\n    });\n    function setup() {\n        var result = null;\n        return testing_1.TestBed.compileComponents()\n            .then(function () {\n            var fixture = testing_1.TestBed.createComponent(TestComponent);\n            var debug = fixture.debugElement.query(platform_browser_1.By.css('md-data-table'));\n            var comp = debug.componentInstance;\n            var testComp = fixture.debugElement.componentInstance;\n            testComp.selected = [];\n            fixture.detectChanges();\n            result = {\n                fixture: fixture,\n                comp: comp,\n                debug: debug\n            };\n            return fixture.whenStable();\n        })\n            .then(function () { return result; })\n            .catch(function (error) {\n            console.error(error);\n        });\n    }\n    describe('md-data-table', function () {\n        it('should initialize selected', testing_1.async(function () {\n            setup().then(function (api) {\n                expect(api.comp.selected.length).toEqual(0);\n                api.fixture.destroy();\n            });\n        }));\n        it('should toggle checked value when a click is fired on a row checkbox', testing_1.async(function () {\n            setup().then(function (api) {\n                var row = api.debug.query(platform_browser_1.By.css('tbody tr:first-child'));\n                row.nativeElement.click();\n                expect(api.comp.selected.length).toEqual(1);\n                expect(api.comp.selected[0]).toEqual('0');\n                row.nativeElement.click();\n                expect(api.comp.selected.length).toEqual(0);\n                api.fixture.destroy();\n            });\n        }));\n        it('should check all row checkbox when a click is fired on master checkbox', testing_1.async(function () {\n            setup().then(function (api) {\n                var masterRow = api.debug.query(platform_browser_1.By.css('thead tr:first-child'));\n                masterRow.nativeElement.click();\n                expect(api.comp.selected.length).toEqual(2);\n                expect(api.comp.selected[0]).toEqual('0');\n                masterRow.nativeElement.click();\n                expect(api.comp.selected.length).toEqual(0);\n                api.fixture.destroy();\n            });\n        }));\n        it('should uncheck master checkbox if a row checkbox is unchecked', testing_1.async(function () {\n            setup().then(function (api) {\n                var masterRow = api.debug.query(platform_browser_1.By.css('thead tr:first-child'));\n                var row = api.debug.query(platform_browser_1.By.css('tbody tr:first-child')).nativeElement;\n                masterRow.nativeElement.click();\n                expect(masterRow.componentInstance.isActive).toBe(true);\n                row.click();\n                expect(api.comp.selected.length).toEqual(1);\n                expect(api.comp.selected[0]).toEqual('1');\n                expect(masterRow.componentInstance.isActive).toBe(false);\n                api.fixture.destroy();\n            });\n        }));\n        it('should fire a selectable_change event when a row checkbox change', testing_1.async(function () {\n            setup().then(function (api) {\n                var row = api.debug.query(platform_browser_1.By.css('tbody tr:first-child')).nativeElement;\n                api.comp.onSelectableAll.subscribe(function (event) {\n                    expect(event.name).toBe('selectable_change');\n                });\n                row.click();\n                api.fixture.destroy();\n            });\n        }));\n    });\n    describe('_unsubscribeChildren', function () {\n        it('should reset the selected values', testing_1.async(function () {\n            setup().then(function (api) {\n                api.comp.selected = ['1', '2'];\n                api.comp._unsubscribeChildren();\n                expect(api.comp.selected.length).toEqual(0);\n            });\n        }));\n        it('should unsubscribe to listener', testing_1.async(function () {\n            setup().then(function (api) {\n                var emitter = new core_1.EventEmitter(false);\n                var spy = jasmine.createSpy('spy');\n                emitter.subscribe(spy);\n                api.comp._listeners = [emitter];\n                emitter.emit({ name: 'custom_event' });\n                api.comp._unsubscribeChildren();\n                expect(function () {\n                    emitter.emit({ name: 'custom_event2' });\n                }).toThrow();\n                expect(spy.calls.count()).toEqual(1);\n            });\n        }));\n    });\n    describe('_updateChildrenListener', function () {\n        it('should ask unsubscription', testing_1.async(function () {\n            setup().then(function (api) {\n                spyOn(api.comp, '_unsubscribeChildren');\n                api.comp._updateChildrenListener(api.comp._rows);\n                expect(api.comp._unsubscribeChildren).toHaveBeenCalled();\n            });\n        }));\n    });\n});\n//# sourceMappingURL=data_table_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/data-table/index.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./data_table'));\n__export(require('./data_table_selectable_tr'));\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/dialog/dialog-actions.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar dialog_1 = require('./dialog');\nvar MdDialogActions = (function () {\n    function MdDialogActions() {\n    }\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdDialogActions.prototype, \"cancel\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdDialogActions.prototype, \"ok\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', dialog_1.MdDialog)\n    ], MdDialogActions.prototype, \"dialog\", void 0);\n    MdDialogActions = __decorate([\n        core_1.Component({\n            selector: 'md-dialog-actions',\n            template: \"\\n  <button *ngIf=\\\"cancel\\\" md-button type=\\\"button\\\" (click)=\\\"dialog.close(false)\\\">\\n    <span>{{ cancel }}</span>\\n  </button>\\n  <button *ngIf=\\\"ok\\\" md-button class=\\\"md-primary\\\" type=\\\"button\\\" (click)=\\\"dialog.close(true)\\\">\\n    <span>{{ ok }}</span>\\n  </button> \\n  <ng-content></ng-content>\",\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdDialogActions);\n    return MdDialogActions;\n}());\nexports.MdDialogActions = MdDialogActions;\n//# sourceMappingURL=dialog-actions.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/dialog/dialog.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar material_1 = require('@angular/material');\nvar material_2 = require('@angular/material');\nvar animate_1 = require('../../core/util/animate');\nvar dialog_portal_1 = require('./dialog-portal');\nvar dialog_actions_1 = require('./dialog-actions');\nvar key_codes_1 = require('../../core/key_codes');\nvar MdDialog = (function () {\n    function MdDialog(overlay) {\n        this.overlay = overlay;\n        this.onShow = new core_1.EventEmitter();\n        this.onClose = new core_1.EventEmitter();\n        this.onCancel = new core_1.EventEmitter();\n        this.active = false;\n        this.config = new material_2.OverlayState();\n        this.overlayRef = null;\n        this.config.positionStrategy = this.overlay.position()\n            .global()\n            .centerHorizontally()\n            .centerVertically();\n    }\n    MdDialog.prototype.ngAfterContentInit = function () {\n        if (this.actions) {\n            this.actions.dialog = this;\n        }\n    };\n    MdDialog.prototype.ngOnDestroy = function () {\n        return this.close();\n    };\n    MdDialog.prototype.show = function () {\n        var _this = this;\n        return this.close()\n            .then(function () { return _this.overlay.create(_this.config); })\n            .then(function (ref) {\n            _this.overlayRef = ref;\n            return ref.attach(_this.portal);\n        })\n            .then(function () { return animate_1.Animate.wait(); })\n            .then(function () {\n            _this.active = true;\n            _this.onShow.emit(_this);\n            return _this;\n        });\n    };\n    MdDialog.prototype.close = function (result, cancel) {\n        var _this = this;\n        if (result === void 0) { result = true; }\n        if (cancel === void 0) { cancel = false; }\n        if (!this.overlayRef) {\n            return Promise.resolve(this);\n        }\n        this.active = false;\n        return animate_1.Animate.wait(100)\n            .then(function () { return _this.overlayRef.detach(); })\n            .then(function () {\n            _this.overlayRef.dispose();\n            _this.overlayRef = null;\n            if (cancel) {\n                _this.onCancel.emit(result);\n            }\n            else {\n                _this.onClose.emit(result);\n            }\n            return _this;\n        });\n    };\n    MdDialog.prototype.onDocumentKeypress = function (event) {\n        if (event.keyCode == key_codes_1.KeyCodes.ESCAPE) {\n            this.close();\n        }\n    };\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdDialog.prototype, \"onShow\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdDialog.prototype, \"onClose\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdDialog.prototype, \"onCancel\", void 0);\n    __decorate([\n        core_1.ViewChild(dialog_portal_1.MdDialogPortal), \n        __metadata('design:type', dialog_portal_1.MdDialogPortal)\n    ], MdDialog.prototype, \"portal\", void 0);\n    __decorate([\n        core_1.ContentChild(dialog_actions_1.MdDialogActions), \n        __metadata('design:type', dialog_actions_1.MdDialogActions)\n    ], MdDialog.prototype, \"actions\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MdDialog.prototype, \"config\", void 0);\n    MdDialog = __decorate([\n        core_1.Component({\n            selector: 'md-dialog',\n            providers: [material_1.Overlay, material_1.OVERLAY_PROVIDERS],\n            encapsulation: core_1.ViewEncapsulation.None,\n            template: \"\\n<template mdDialogPortal>\\n  <div class=\\\"md-dialog\\\" [class.md-active]=\\\"active\\\">\\n    <ng-content select=\\\"md-dialog-title\\\"></ng-content>\\n    <ng-content></ng-content>\\n    <ng-content select=\\\"md-dialog-actions\\\"></ng-content>\\n  </div>\\n</template>\\n\",\n            host: {\n                'tabindex': '0',\n                '(body:keydown)': 'onDocumentKeypress($event)'\n            }\n        }), \n        __metadata('design:paramtypes', [material_1.Overlay])\n    ], MdDialog);\n    return MdDialog;\n}());\nexports.MdDialog = MdDialog;\n//# sourceMappingURL=dialog.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/dialog/dialog.module.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar dialog_1 = require('./dialog');\nvar dialog_portal_1 = require('./dialog-portal');\nvar dialog_actions_1 = require('./dialog-actions');\nvar dialog_title_1 = require('./dialog-title');\nvar material_1 = require('@angular/material');\nvar core_1 = require('@angular/core');\nvar common_1 = require('@angular/common');\nvar DIALOG_DIRECTIVES = [\n    dialog_1.MdDialog, dialog_title_1.MdDialogTitle, dialog_actions_1.MdDialogActions, dialog_portal_1.MdDialogPortal\n];\nvar MdDialogModule = (function () {\n    function MdDialogModule() {\n    }\n    MdDialogModule = __decorate([\n        core_1.NgModule({\n            declarations: DIALOG_DIRECTIVES,\n            exports: DIALOG_DIRECTIVES,\n            imports: [\n                common_1.CommonModule,\n                material_1.MdCoreModule\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdDialogModule);\n    return MdDialogModule;\n}());\nexports.MdDialogModule = MdDialogModule;\n//# sourceMappingURL=dialog.module.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/dialog/dialog-portal.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar material_1 = require('@angular/material');\nvar MdDialogPortal = (function (_super) {\n    __extends(MdDialogPortal, _super);\n    function MdDialogPortal(templateRef, viewContainerRef) {\n        _super.call(this, templateRef, viewContainerRef);\n    }\n    MdDialogPortal = __decorate([\n        core_1.Directive({ selector: '[mdDialogPortal]' }), \n        __metadata('design:paramtypes', [core_1.TemplateRef, core_1.ViewContainerRef])\n    ], MdDialogPortal);\n    return MdDialogPortal;\n}(material_1.TemplatePortalDirective));\nexports.MdDialogPortal = MdDialogPortal;\n//# sourceMappingURL=dialog-portal.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/dialog/dialog_spec.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar util_1 = require('../../platform/testing/util');\nvar testing_1 = require('@angular/core/testing');\nvar index_1 = require('../../index');\nvar util_module_1 = require('../../core/util/util.module');\nvar core_1 = require('@angular/core');\nvar dialog_1 = require('./dialog');\nvar dialog_module_1 = require('./dialog.module');\nvar template = \"\\n  <md-dialog>\\n    <md-dialog-title>Title</md-dialog-title>\\n    Content!\\n  </md-dialog>\";\nutil_1.componentSanityCheck('Dialog', 'md-dialog', template);\ndescribe('Dialog', function () {\n    var MdDialogComponentTest = (function () {\n        function MdDialogComponentTest() {\n        }\n        __decorate([\n            core_1.ViewChild(dialog_1.MdDialog), \n            __metadata('design:type', dialog_1.MdDialog)\n        ], MdDialogComponentTest.prototype, \"dialog\", void 0);\n        MdDialogComponentTest = __decorate([\n            core_1.Component({\n                template: \"\\n<md-dialog>\\n  <md-dialog-title>Title</md-dialog-title>\\n  Content!\\n</md-dialog>\",\n            }), \n            __metadata('design:paramtypes', [])\n        ], MdDialogComponentTest);\n        return MdDialogComponentTest;\n    }());\n    beforeEach(function () {\n        testing_1.TestBed.configureTestingModule({\n            declarations: [MdDialogComponentTest],\n            imports: [util_module_1.MdServicesModule, dialog_module_1.MdDialogModule],\n            providers: [index_1.MATERIAL_BROWSER_PROVIDERS]\n        });\n    });\n    function setup() {\n        return testing_1.TestBed.compileComponents()\n            .then(function () {\n            var fixture = testing_1.TestBed.createComponent(MdDialogComponentTest);\n            fixture.detectChanges();\n            return fixture.whenStable().then(function () { return fixture; });\n        })\n            .catch(function (error) {\n            console.error(error);\n        });\n    }\n    describe('show', function () {\n        it('(onShow) emits after dialog is shown', testing_1.async(function () {\n            setup().then(function (fixture) {\n                var tc = fixture.componentInstance;\n                var called = false;\n                var sub = tc.dialog.onShow.subscribe(function () { return called = true; });\n                return tc.dialog.show().then(function () { return util_1.promiseWait(); }).then(function () {\n                    sub.unsubscribe();\n                    expect(called).toBe(true);\n                    return tc.dialog.close();\n                });\n            });\n        }));\n    });\n    describe('close', function () {\n        it('dialog result is true if called with no arguments', testing_1.async(function () {\n            setup().then(function (fixture) {\n                var tc = fixture.componentInstance;\n                var result = 1337;\n                var sub = tc.dialog.onClose.subscribe(function (r) { return result = r; });\n                return tc.dialog.show()\n                    .then(function () { return tc.dialog.close(); })\n                    .then(function () { return util_1.promiseWait(); })\n                    .then(function () {\n                    sub.unsubscribe();\n                    expect(result).toBe(true);\n                });\n            });\n        }));\n        it('(onClose) emits after dialog is closed and cancel = false', testing_1.async(function () {\n            setup().then(function (fixture) {\n                var tc = fixture.componentInstance;\n                var result;\n                var sub = tc.dialog.onClose.subscribe(function (r) { return result = r; });\n                return tc.dialog.show()\n                    .then(function () { return tc.dialog.close(1337, false); })\n                    .then(function () { return util_1.promiseWait(); })\n                    .then(function () {\n                    sub.unsubscribe();\n                    expect(result).toBe(1337);\n                });\n            });\n        }));\n        it('(onCancel) emits after dialog is closed and cancel = true', testing_1.async(function () {\n            setup().then(function (fixture) {\n                var tc = fixture.componentInstance;\n                var result;\n                var sub = tc.dialog.onCancel.subscribe(function (r) { return result = r; });\n                return tc.dialog.show()\n                    .then(function () { return tc.dialog.close('test', true); })\n                    .then(function () { return util_1.promiseWait(); })\n                    .then(function () {\n                    sub.unsubscribe();\n                    expect(result).toBe('test');\n                });\n            });\n        }));\n    });\n});\n//# sourceMappingURL=dialog_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/dialog/dialog-title.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar MdDialogTitle = (function () {\n    function MdDialogTitle() {\n    }\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdDialogTitle.prototype, \"title\", void 0);\n    MdDialogTitle = __decorate([\n        core_1.Component({\n            selector: 'md-dialog-title',\n            template: \"<h2 *ngIf=\\\"title\\\">{{title}}</h2><ng-content></ng-content>\",\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdDialogTitle);\n    return MdDialogTitle;\n}());\nexports.MdDialogTitle = MdDialogTitle;\n//# sourceMappingURL=dialog-title.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/dialog/index.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./dialog'));\n__export(require('./dialog-actions'));\n__export(require('./dialog-portal'));\n__export(require('./dialog-title'));\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/divider/divider.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar MdDivider = (function () {\n    function MdDivider() {\n    }\n    MdDivider = __decorate([\n        core_1.Component({\n            selector: 'md-divider',\n            template: '',\n            encapsulation: core_1.ViewEncapsulation.None\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdDivider);\n    return MdDivider;\n}());\nvar MdDividerModule = (function () {\n    function MdDividerModule() {\n    }\n    MdDividerModule = __decorate([\n        core_1.NgModule({\n            declarations: [MdDivider],\n            exports: [MdDivider]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdDividerModule);\n    return MdDividerModule;\n}());\nexports.MdDividerModule = MdDividerModule;\n//# sourceMappingURL=divider.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/divider/divider_spec.js":"\"use strict\";\nvar util_1 = require('../../platform/testing/util');\nutil_1.componentSanityCheck('Divider', 'md-divider', \"<md-divider></md-divider>\");\n//# sourceMappingURL=divider_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/pagination/index.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./pagination'));\n__export(require('./pagination_service'));\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/pagination/pagination.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar common_1 = require('@angular/common');\nvar forms_1 = require('@angular/forms');\nvar platform_browser_1 = require('@angular/platform-browser');\nrequire('rxjs/add/operator/filter');\nvar pagination_service_1 = require('./pagination_service');\nfunction isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nvar AbstractPaginationSubComponent = (function () {\n    function AbstractPaginationSubComponent(service) {\n        this.service = service;\n        this.name = 'default';\n        this.model = {\n            currentPage: 0,\n            itemsPerPage: 0,\n            totalItems: 0\n        };\n    }\n    AbstractPaginationSubComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        if (!this.name) {\n            this.name = 'default';\n        }\n        this.service.onChange\n            .filter(function (event) { return isPresent(event) && isPresent(event.name); })\n            .filter(function (event) { return event.target === _this.name; })\n            .subscribe(function (event) {\n            _this.model = event.pagination;\n        });\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], AbstractPaginationSubComponent.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], AbstractPaginationSubComponent.prototype, \"model\", void 0);\n    return AbstractPaginationSubComponent;\n}());\nexports.AbstractPaginationSubComponent = AbstractPaginationSubComponent;\nvar MdPaginationRange = (function (_super) {\n    __extends(MdPaginationRange, _super);\n    function MdPaginationRange(service, sanitizationService) {\n        _super.call(this, service);\n        this.service = service;\n        this.sanitizationService = sanitizationService;\n        this.mdPaginationRange = true;\n        this.name = 'default';\n        this.model = {\n            currentPage: 0,\n            itemsPerPage: 0,\n            totalItems: 0\n        };\n        this.value = '';\n    }\n    Object.defineProperty(MdPaginationRange.prototype, \"html\", {\n        get: function () {\n            return this.getRange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(MdPaginationRange.prototype, \"computedRangeFormat\", {\n        get: function () {\n            if (this.rangeFormat)\n                return this.rangeFormat;\n            return '{start}-{end} of {total}';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdPaginationRange.prototype.getFormattedValue = function (rangeStart, rangeStop, totalItems) {\n        var result = this.computedRangeFormat;\n        result = result.replace(/\\{start\\}/gi, rangeStart.toString());\n        result = result.replace(/\\{end\\}/gi, rangeStop.toString());\n        result = result.replace(/\\{total\\}/gi, totalItems.toString());\n        return result;\n    };\n    MdPaginationRange.prototype.getRange = function () {\n        if (isPresent(this.model)) {\n            var rangeStart = (this.model.currentPage - 1) * this.model.itemsPerPage + 1;\n            var rest = this.model.totalItems - rangeStart, rangeStop = rest < this.model.itemsPerPage ? this.model.totalItems : rangeStart + this.model.itemsPerPage - 1;\n            return this.sanitizationService.bypassSecurityTrustHtml(this.getFormattedValue(rangeStart, rangeStop, this.model.totalItems));\n        }\n        return;\n    };\n    __decorate([\n        core_1.HostBinding('class.md-pagination-range'), \n        __metadata('design:type', Boolean)\n    ], MdPaginationRange.prototype, \"mdPaginationRange\", void 0);\n    __decorate([\n        core_1.HostBinding('innerHTML'), \n        __metadata('design:type', Object)\n    ], MdPaginationRange.prototype, \"html\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdPaginationRange.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MdPaginationRange.prototype, \"model\", void 0);\n    __decorate([\n        core_1.Input('range-format'), \n        __metadata('design:type', String)\n    ], MdPaginationRange.prototype, \"rangeFormat\", void 0);\n    MdPaginationRange = __decorate([\n        core_1.Component({\n            selector: 'md-pagination-range',\n            template: '',\n        }), \n        __metadata('design:paramtypes', [pagination_service_1.PaginationService, platform_browser_1.DomSanitizer])\n    ], MdPaginationRange);\n    return MdPaginationRange;\n}(AbstractPaginationSubComponent));\nexports.MdPaginationRange = MdPaginationRange;\nvar MdPaginationControls = (function (_super) {\n    __extends(MdPaginationControls, _super);\n    function MdPaginationControls(service) {\n        _super.call(this, service);\n        this.service = service;\n        this.mdPaginationControls = true;\n        this.name = 'default';\n        this.model = {\n            currentPage: 0,\n            itemsPerPage: 0,\n            totalItems: 0\n        };\n    }\n    MdPaginationControls.prototype.isFirstPage = function () {\n        return isPresent(this.model) && this.model.currentPage == 1;\n    };\n    MdPaginationControls.prototype.isLastPage = function () {\n        return isPresent(this.model) && this.model.totalItems <= this.model.currentPage * this.model.itemsPerPage;\n    };\n    MdPaginationControls.prototype.previousPage = function () {\n        if (isPresent(this.model)) {\n            this.changePage(this.model.currentPage - 1);\n        }\n    };\n    MdPaginationControls.prototype.nextPage = function () {\n        if (isPresent(this.model)) {\n            this.changePage(this.model.currentPage + 1);\n        }\n    };\n    MdPaginationControls.prototype.changePage = function (newPage) {\n        var model = JSON.parse(JSON.stringify(this.model));\n        model.currentPage = newPage;\n        this.service.change(this.name, model);\n    };\n    __decorate([\n        core_1.HostBinding('class.md-pagination-controls'), \n        __metadata('design:type', Boolean)\n    ], MdPaginationControls.prototype, \"mdPaginationControls\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdPaginationControls.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MdPaginationControls.prototype, \"model\", void 0);\n    MdPaginationControls = __decorate([\n        core_1.Component({\n            selector: 'md-pagination-controls',\n            template: \"\\n      <span [class.md-pagination-control-active]=\\\"!isFirstPage()\\\" class=\\\"md-pagination-control md-pagination-control-previous\\\">\\n        <button (click)=\\\"previousPage()\\\" class=\\\"material-icons\\\">keyboard_arrow_left</button>\\n      </span>\\n      <span [class.md-pagination-control-active]=\\\"!isLastPage()\\\" class=\\\"md-pagination-control md-pagination-control-next\\\">\\n        <button (click)=\\\"nextPage()\\\" class=\\\"material-icons\\\">keyboard_arrow_right</button>\\n      </span>\\n    \"\n        }), \n        __metadata('design:paramtypes', [pagination_service_1.PaginationService])\n    ], MdPaginationControls);\n    return MdPaginationControls;\n}(AbstractPaginationSubComponent));\nexports.MdPaginationControls = MdPaginationControls;\nvar MdPaginationItemsPerPage = (function (_super) {\n    __extends(MdPaginationItemsPerPage, _super);\n    function MdPaginationItemsPerPage(service) {\n        _super.call(this, service);\n        this.service = service;\n        this.mdPaginationItemsPerPage = true;\n        this.name = 'default';\n        this.model = {\n            currentPage: 0,\n            itemsPerPage: 0,\n            totalItems: 0\n        };\n        this.itemsPerPageBefore = 'Rows per page:';\n        this.itemsPerPageOptions = [];\n    }\n    Object.defineProperty(MdPaginationItemsPerPage.prototype, \"hidden\", {\n        get: function () {\n            return !this.itemsPerPageOptions || !this.itemsPerPageOptions.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    MdPaginationItemsPerPage.prototype.changePaginationLength = function (value) {\n        var model = JSON.parse(JSON.stringify(this.model));\n        model.currentPage = 1;\n        model.itemsPerPage = parseInt(value);\n        this.service.change(this.name, model);\n    };\n    __decorate([\n        core_1.HostBinding('class.md-pagination-items-per-page'), \n        __metadata('design:type', Boolean)\n    ], MdPaginationItemsPerPage.prototype, \"mdPaginationItemsPerPage\", void 0);\n    __decorate([\n        core_1.HostBinding(), \n        __metadata('design:type', Object)\n    ], MdPaginationItemsPerPage.prototype, \"hidden\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdPaginationItemsPerPage.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MdPaginationItemsPerPage.prototype, \"model\", void 0);\n    __decorate([\n        core_1.Input('items-per-page-before'), \n        __metadata('design:type', String)\n    ], MdPaginationItemsPerPage.prototype, \"itemsPerPageBefore\", void 0);\n    __decorate([\n        core_1.Input('items-per-page-after'), \n        __metadata('design:type', String)\n    ], MdPaginationItemsPerPage.prototype, \"itemsPerPageAfter\", void 0);\n    __decorate([\n        core_1.Input('items-per-page-options'), \n        __metadata('design:type', Array)\n    ], MdPaginationItemsPerPage.prototype, \"itemsPerPageOptions\", void 0);\n    MdPaginationItemsPerPage = __decorate([\n        core_1.Component({\n            selector: 'md-pagination-items-per-page',\n            template: \"\\n   <span *ngIf=\\\"itemsPerPageBefore\\\" class=\\\"md-pagination-items-per-page-label md-pagination-items-per-page-before\\\">{{itemsPerPageBefore}}</span>\\n   <select [(ngModel)]=\\\"model.itemsPerPage\\\" (ngModelChange)=\\\"changePaginationLength($event)\\\" class=\\\"md-pagination-length-select\\\">\\n      <option *ngFor=\\\"let length of itemsPerPageOptions\\\" [value]=\\\"length\\\">\\n        {{length}}\\n      </option>\\n    </select>\\n    <span *ngIf=\\\"itemsPerPageAfter\\\" class=\\\"md-pagination-items-per-page-label md-pagination-items-per-page-after\\\">{{itemsPerPageAfter}}</span>\\n  \"\n        }), \n        __metadata('design:paramtypes', [pagination_service_1.PaginationService])\n    ], MdPaginationItemsPerPage);\n    return MdPaginationItemsPerPage;\n}(AbstractPaginationSubComponent));\nexports.MdPaginationItemsPerPage = MdPaginationItemsPerPage;\nvar MdPagination = (function () {\n    function MdPagination(service, element) {\n        var _this = this;\n        this.service = service;\n        this.element = element;\n        this.mdPagination = true;\n        this.name = 'default';\n        this.model = {\n            currentPage: 0,\n            itemsPerPage: 0,\n            totalItems: 0\n        };\n        this.range = true;\n        this.controls = true;\n        this.itemsPerPage = true;\n        this.onPaginationChange = new core_1.EventEmitter(false);\n        this.defaultDisplay = true;\n        this.service.onChange\n            .filter(function (event) { return isPresent(event) && isPresent(event.name); })\n            .filter(function (event) {\n            return event.target === _this.name;\n        })\n            .subscribe(function (event) { return _this.onPaginationChange.emit(event); });\n    }\n    MdPagination.prototype.ngAfterContentInit = function () {\n        this.defaultDisplay = this.element.nativeElement.childElementCount === 0;\n    };\n    MdPagination.prototype.ngAfterViewInit = function () {\n        this.service.change(this.name, this.model);\n    };\n    __decorate([\n        core_1.HostBinding('class.md-pagination'), \n        __metadata('design:type', Boolean)\n    ], MdPagination.prototype, \"mdPagination\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdPagination.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], MdPagination.prototype, \"model\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean)\n    ], MdPagination.prototype, \"range\", void 0);\n    __decorate([\n        core_1.Input('range-format'), \n        __metadata('design:type', String)\n    ], MdPagination.prototype, \"rangeFormat\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean)\n    ], MdPagination.prototype, \"controls\", void 0);\n    __decorate([\n        core_1.Input('items-per-page'), \n        __metadata('design:type', Boolean)\n    ], MdPagination.prototype, \"itemsPerPage\", void 0);\n    __decorate([\n        core_1.Input('items-per-page-before'), \n        __metadata('design:type', String)\n    ], MdPagination.prototype, \"itemsPerPageBefore\", void 0);\n    __decorate([\n        core_1.Input('items-per-page-after'), \n        __metadata('design:type', String)\n    ], MdPagination.prototype, \"itemsPerPageAfter\", void 0);\n    __decorate([\n        core_1.Input('items-per-page-options'), \n        __metadata('design:type', Array)\n    ], MdPagination.prototype, \"itemsPerPageOptions\", void 0);\n    __decorate([\n        core_1.Output('on-pagination-change'), \n        __metadata('design:type', core_1.EventEmitter)\n    ], MdPagination.prototype, \"onPaginationChange\", void 0);\n    MdPagination = __decorate([\n        core_1.Component({\n            selector: 'md-pagination',\n            template: \"\\n    <ng-content></ng-content>\\n    <md-pagination-items-per-page\\n      *ngIf=\\\"defaultDisplay && itemsPerPage\\\"\\n      [name]=\\\"name\\\"\\n      [model]=\\\"model\\\"\\n      [items-per-page-before]=\\\"itemsPerPageBefore\\\"\\n      [items-per-page-after]=\\\"itemsPerPageAfter\\\"\\n      [items-per-page-options]=\\\"itemsPerPageOptions\\\"></md-pagination-items-per-page>\\n    <md-pagination-range\\n      *ngIf=\\\"defaultDisplay && range\\\"\\n      [name]=\\\"name\\\"\\n      [model]=\\\"model\\\"\\n      [range-format]=\\\"rangeFormat\\\"></md-pagination-range>\\n    <md-pagination-controls\\n      *ngIf=\\\"defaultDisplay && controls\\\"\\n      [name]=\\\"name\\\"\\n      [model]=\\\"model\\\"></md-pagination-controls>\\n  \"\n        }), \n        __metadata('design:paramtypes', [pagination_service_1.PaginationService, core_1.ElementRef])\n    ], MdPagination);\n    return MdPagination;\n}());\nexports.MdPagination = MdPagination;\nvar PAGINATION_DIRECTIVES = [\n    MdPagination,\n    MdPaginationControls,\n    MdPaginationItemsPerPage,\n    MdPaginationRange\n];\nvar MdPaginationModule = (function () {\n    function MdPaginationModule() {\n    }\n    MdPaginationModule = __decorate([\n        core_1.NgModule({\n            declarations: PAGINATION_DIRECTIVES,\n            exports: PAGINATION_DIRECTIVES,\n            imports: [\n                common_1.CommonModule,\n                forms_1.FormsModule\n            ],\n            providers: [pagination_service_1.PaginationService]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdPaginationModule);\n    return MdPaginationModule;\n}());\nexports.MdPaginationModule = MdPaginationModule;\n//# sourceMappingURL=pagination.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/node_modules/@angular/common/bundles/common.umd.js":"/**\n * @license Angular v2.4.10\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n    /**\n     * This class should not be used directly by an application developer. Instead, use\n     * {\\@link Location}.\n     *\n     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n     * agnostic.\n     * This means that we can have different implementation of `PlatformLocation` for the different\n     * platforms\n     * that angular supports. For example, the default `PlatformLocation` is {\\@link\n     * BrowserPlatformLocation},\n     * however when you run your app in a WebWorker you use {\\@link WebWorkerPlatformLocation}.\n     *\n     * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n     * when\n     * they need to interact with the DOM apis like pushState, popState, etc...\n     *\n     * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n     * by\n     * the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n     * Router} /\n     * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n     * class\n     * they are all platform independent.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var PlatformLocation = (function () {\n        function PlatformLocation() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.getBaseHrefFromDOM = function () { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        PlatformLocation.prototype.onPopState = function (fn) { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        PlatformLocation.prototype.onHashChange = function (fn) { };\n        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        PlatformLocation.prototype.replaceState = function (state, title, url) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        PlatformLocation.prototype.pushState = function (state, title, url) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.forward = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.back = function () { };\n        return PlatformLocation;\n    }());\n    /**\n     * @whatItDoes indicates when a location is initialized\n     * @experimental\n     */\n    var /** @type {?} */ LOCATION_INITIALIZED = new _angular_core.OpaqueToken('Location Initialized');\n\n    /**\n     * `LocationStrategy` is responsible for representing and reading route state\n     * from the browser's URL. Angular provides two strategies:\n     * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n     *\n     * This is used under the hood of the {\\@link Location} service.\n     *\n     * Applications should use the {\\@link Router} or {\\@link Location} services to\n     * interact with application route state.\n     *\n     * For instance, {\\@link HashLocationStrategy} produces URLs like\n     * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n     * `http://example.com/foo` as an equivalent URL.\n     *\n     * See these two classes for more.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var LocationStrategy = (function () {\n        function LocationStrategy() {\n        }\n        /**\n         * @abstract\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        LocationStrategy.prototype.path = function (includeHash) { };\n        /**\n         * @abstract\n         * @param {?} internal\n         * @return {?}\n         */\n        LocationStrategy.prototype.prepareExternalUrl = function (internal) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        LocationStrategy.prototype.pushState = function (state, title, url, queryParams) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        LocationStrategy.prototype.replaceState = function (state, title, url, queryParams) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.forward = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.back = function () { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        LocationStrategy.prototype.onPopState = function (fn) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.getBaseHref = function () { };\n        return LocationStrategy;\n    }());\n    /**\n     * The `APP_BASE_HREF` token represents the base href to be used with the\n     * {@link PathLocationStrategy}.\n     *\n     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n     * representing the URL prefix that should be preserved when generating and recognizing\n     * URLs.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {Component, NgModule} from '@angular/core';\n     * import {APP_BASE_HREF} from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var /** @type {?} */ APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = (self);\n        }\n        else {\n            globalScope = (global);\n        }\n    }\n    else {\n        globalScope = (window);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var /** @type {?} */ _global = globalScope;\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var /** @type {?} */ res = token.toString();\n        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    var NumberWrapper = (function () {\n        function NumberWrapper() {\n        }\n        /**\n         * @param {?} text\n         * @return {?}\n         */\n        NumberWrapper.parseIntAutoRadix = function (text) {\n            var /** @type {?} */ result = parseInt(text);\n            if (isNaN(result)) {\n                throw new Error('Invalid integer literal when parsing ' + text);\n            }\n            return result;\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n        return NumberWrapper;\n    }());\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    var /** @type {?} */ _symbolIterator = null;\n    /**\n     * @return {?}\n     */\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (((globalScope)).Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                    var /** @type {?} */ key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        ((Map)).prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n     * \\@description\n     * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n     * to the URL's path or the URL's hash segment.\n     *\n     * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n     * `Location` only if you need to interact with or create normalized URLs outside of\n     * routing.\n     *\n     * `Location` is responsible for normalizing the URL against the application's base href.\n     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n     * trailing slash:\n     * - `/my/app/user/123` is normalized\n     * - `my/app/user/123` **is not** normalized\n     * - `/my/app/user/123/` **is not** normalized\n     *\n     * ### Example\n     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n     * \\@stable\n     */\n    var Location = (function () {\n        /**\n         * @param {?} platformStrategy\n         */\n        function Location(platformStrategy) {\n            var _this = this;\n            /** @internal */\n            this._subject = new _angular_core.EventEmitter();\n            this._platformStrategy = platformStrategy;\n            var browserBaseHref = this._platformStrategy.getBaseHref();\n            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n            this._platformStrategy.onPopState(function (ev) {\n                _this._subject.emit({\n                    'url': _this.path(true),\n                    'pop': true,\n                    'type': ev.type,\n                });\n            });\n        }\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        Location.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            return this.normalize(this._platformStrategy.path(includeHash));\n        };\n        /**\n         * Normalizes the given path and compares to the current normalized path.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n            if (query === void 0) { query = ''; }\n            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n        };\n        /**\n         * Given a string representing a URL, returns the normalized URL path without leading or\n         * trailing slashes.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.prototype.normalize = function (url) {\n            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n        };\n        /**\n         * Given a string representing a URL, returns the platform-specific external URL path.\n         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.prototype.prepareExternalUrl = function (url) {\n            if (url && url[0] !== '/') {\n                url = '/' + url;\n            }\n            return this._platformStrategy.prepareExternalUrl(url);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n         * new item onto the platform's history.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.go = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.pushState(null, '', path, query);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and replaces\n         * the top item on the platform's history stack.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.replaceState = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.replaceState(null, '', path, query);\n        };\n        /**\n         * Navigates forward in the platform's history.\n         * @return {?}\n         */\n        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n        /**\n         * Navigates back in the platform's history.\n         * @return {?}\n         */\n        Location.prototype.back = function () { this._platformStrategy.back(); };\n        /**\n         * Subscribe to the platform's `popState` events.\n         * @param {?} onNext\n         * @param {?=} onThrow\n         * @param {?=} onReturn\n         * @return {?}\n         */\n        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n            if (onThrow === void 0) { onThrow = null; }\n            if (onReturn === void 0) { onReturn = null; }\n            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n        };\n        /**\n         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n         * is.\n         * @param {?} params\n         * @return {?}\n         */\n        Location.normalizeQueryParams = function (params) {\n            return params && params[0] !== '?' ? '?' + params : params;\n        };\n        /**\n         * Given 2 parts of a url, join them with a slash if needed.\n         * @param {?} start\n         * @param {?} end\n         * @return {?}\n         */\n        Location.joinWithSlash = function (start, end) {\n            if (start.length == 0) {\n                return end;\n            }\n            if (end.length == 0) {\n                return start;\n            }\n            var /** @type {?} */ slashes = 0;\n            if (start.endsWith('/')) {\n                slashes++;\n            }\n            if (end.startsWith('/')) {\n                slashes++;\n            }\n            if (slashes == 2) {\n                return start + end.substring(1);\n            }\n            if (slashes == 1) {\n                return start + end;\n            }\n            return start + '/' + end;\n        };\n        /**\n         * If url has a trailing slash, remove it, otherwise return url as is.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.stripTrailingSlash = function (url) { return url.replace(/\\/$/, ''); };\n        Location.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        Location.ctorParameters = function () { return [\n            { type: LocationStrategy, },\n        ]; };\n        return Location;\n    }());\n    /**\n     * @param {?} baseHref\n     * @param {?} url\n     * @return {?}\n     */\n    function _stripBaseHref(baseHref, url) {\n        return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function _stripIndexHtml(url) {\n        return url.replace(/\\/index.html$/, '');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@whatItDoes Use URL hash for storing application location data.\n     * \\@description\n     * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n     * {\\@link Location} service to represent its state in the\n     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n     * of the browser's URL.\n     *\n     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n     * `example.com#/foo`.\n     *\n     * ### Example\n     *\n     * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n     *\n     * \\@stable\n     */\n    var HashLocationStrategy = (function (_super) {\n        __extends(HashLocationStrategy, _super);\n        /**\n         * @param {?} _platformLocation\n         * @param {?=} _baseHref\n         */\n        function HashLocationStrategy(_platformLocation, _baseHref) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            this._baseHref = '';\n            if (isPresent(_baseHref)) {\n                this._baseHref = _baseHref;\n            }\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            // the hash value is always prefixed with a `#`\n            // and if it is empty then it will stay empty\n            var /** @type {?} */ path = this._platformLocation.hash;\n            if (!isPresent(path))\n                path = '#';\n            return path.length > 0 ? path.substring(1) : path;\n        };\n        /**\n         * @param {?} internal\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            var /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n            return url.length > 0 ? ('#' + url) : url;\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} path\n         * @param {?} queryParams\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.pushState(state, title, url);\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} path\n         * @param {?} queryParams\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.replaceState(state, title, url);\n        };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        HashLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HashLocationStrategy.ctorParameters = function () { return [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ]; };\n        return HashLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@whatItDoes Use URL for storing application location data.\n     * \\@description\n     * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n     * {\\@link Location} service to represent its state in the\n     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n     * browser's URL.\n     *\n     * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n     * or add a base element to the document. This URL prefix that will be preserved\n     * when generating and recognizing URLs.\n     *\n     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * ### Example\n     *\n     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n     *\n     * \\@stable\n     */\n    var PathLocationStrategy = (function (_super) {\n        __extends$1(PathLocationStrategy, _super);\n        /**\n         * @param {?} _platformLocation\n         * @param {?=} href\n         */\n        function PathLocationStrategy(_platformLocation, href) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            if (isBlank(href)) {\n                href = this._platformLocation.getBaseHrefFromDOM();\n            }\n            if (isBlank(href)) {\n                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n            }\n            this._baseHref = href;\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        /**\n         * @param {?} internal\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            return Location.joinWithSlash(this._baseHref, internal);\n        };\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            var /** @type {?} */ pathname = this._platformLocation.pathname +\n                Location.normalizeQueryParams(this._platformLocation.search);\n            var /** @type {?} */ hash = this._platformLocation.hash;\n            return hash && includeHash ? \"\" + pathname + hash : pathname;\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.pushState(state, title, externalUrl);\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.replaceState(state, title, externalUrl);\n        };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        PathLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        PathLocationStrategy.ctorParameters = function () { return [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ]; };\n        return PathLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@experimental\n     * @abstract\n     */\n    var NgLocalization = (function () {\n        function NgLocalization() {\n        }\n        /**\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        NgLocalization.prototype.getPluralCategory = function (value) { };\n        return NgLocalization;\n    }());\n    /**\n     * Returns the plural category for a given value.\n     * - \"=value\" when the case exists,\n     * - the plural category otherwise\n     *\n     * \\@internal\n     * @param {?} value\n     * @param {?} cases\n     * @param {?} ngLocalization\n     * @return {?}\n     */\n    function getPluralCategory(value, cases, ngLocalization) {\n        var /** @type {?} */ key = \"=\" + value;\n        if (cases.indexOf(key) > -1) {\n            return key;\n        }\n        key = ngLocalization.getPluralCategory(value);\n        if (cases.indexOf(key) > -1) {\n            return key;\n        }\n        if (cases.indexOf('other') > -1) {\n            return 'other';\n        }\n        throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n    }\n    /**\n     * Returns the plural case based on the locale\n     *\n     * \\@experimental\n     */\n    var NgLocaleLocalization = (function (_super) {\n        __extends$2(NgLocaleLocalization, _super);\n        /**\n         * @param {?} _locale\n         */\n        function NgLocaleLocalization(_locale) {\n            _super.call(this);\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n            var /** @type {?} */ plural = getPluralCase(this._locale, value);\n            switch (plural) {\n                case Plural.Zero:\n                    return 'zero';\n                case Plural.One:\n                    return 'one';\n                case Plural.Two:\n                    return 'two';\n                case Plural.Few:\n                    return 'few';\n                case Plural.Many:\n                    return 'many';\n                default:\n                    return 'other';\n            }\n        };\n        NgLocaleLocalization.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        NgLocaleLocalization.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return NgLocaleLocalization;\n    }(NgLocalization));\n    var Plural = {};\n    Plural.Zero = 0;\n    Plural.One = 1;\n    Plural.Two = 2;\n    Plural.Few = 3;\n    Plural.Many = 4;\n    Plural.Other = 5;\n    Plural[Plural.Zero] = \"Zero\";\n    Plural[Plural.One] = \"One\";\n    Plural[Plural.Two] = \"Two\";\n    Plural[Plural.Few] = \"Few\";\n    Plural[Plural.Many] = \"Many\";\n    Plural[Plural.Other] = \"Other\";\n    /**\n     * Returns the plural case based on the locale\n     *\n     * \\@experimental\n     * @param {?} locale\n     * @param {?} nLike\n     * @return {?}\n     */\n    function getPluralCase(locale, nLike) {\n        // TODO(vicb): lazy compute\n        if (typeof nLike === 'string') {\n            nLike = parseInt(/** @type {?} */ (nLike), 10);\n        }\n        var /** @type {?} */ n = (nLike);\n        var /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var /** @type {?} */ i = Math.floor(Math.abs(n));\n        var /** @type {?} */ v = nDecimal.length;\n        var /** @type {?} */ f = parseInt(nDecimal, 10);\n        var /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'agq':\n            case 'bas':\n            case 'cu':\n            case 'dav':\n            case 'dje':\n            case 'dua':\n            case 'dyo':\n            case 'ebu':\n            case 'ewo':\n            case 'guz':\n            case 'kam':\n            case 'khq':\n            case 'ki':\n            case 'kln':\n            case 'kok':\n            case 'ksf':\n            case 'lrc':\n            case 'lu':\n            case 'luo':\n            case 'luy':\n            case 'mer':\n            case 'mfe':\n            case 'mgh':\n            case 'mua':\n            case 'mzn':\n            case 'nmg':\n            case 'nus':\n            case 'qu':\n            case 'rn':\n            case 'rw':\n            case 'sbp':\n            case 'twq':\n            case 'vai':\n            case 'yav':\n            case 'yue':\n            case 'zgh':\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            default:\n                return Plural.Other;\n        }\n    }\n\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n     *\n     * \\@howToUse\n     * ```\n     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n     * - `string` - the CSS classes listed in the string (space delimited) are added,\n     * - `Array` - the CSS classes declared as Array elements are added,\n     * - `Object` - keys are CSS classes that get added when the expression given in the value\n     *              evaluates to a truthy value, otherwise they are removed.\n     *\n     * \\@stable\n     */\n    var NgClass = (function () {\n        /**\n         * @param {?} _iterableDiffers\n         * @param {?} _keyValueDiffers\n         * @param {?} _ngEl\n         * @param {?} _renderer\n         */\n        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n            this._iterableDiffers = _iterableDiffers;\n            this._keyValueDiffers = _keyValueDiffers;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n            this._initialClasses = [];\n        }\n        Object.defineProperty(NgClass.prototype, \"klass\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._applyInitialClasses(true);\n                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n                this._applyInitialClasses(false);\n                this._applyClasses(this._rawClass, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._cleanupClasses(this._rawClass);\n                this._iterableDiffer = null;\n                this._keyValueDiffer = null;\n                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n                if (this._rawClass) {\n                    if (isListLikeIterable(this._rawClass)) {\n                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n                    }\n                    else {\n                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgClass.prototype.ngDoCheck = function () {\n            if (this._iterableDiffer) {\n                var /** @type {?} */ changes = this._iterableDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyIterableChanges(changes);\n                }\n            }\n            else if (this._keyValueDiffer) {\n                var /** @type {?} */ changes = this._keyValueDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyKeyValueChanges(changes);\n                }\n            }\n        };\n        /**\n         * @param {?} rawClassVal\n         * @return {?}\n         */\n        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n            this._applyClasses(rawClassVal, true);\n            this._applyInitialClasses(false);\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgClass.prototype._applyKeyValueChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachRemovedItem(function (record) {\n                if (record.previousValue) {\n                    _this._toggleClass(record.key, false);\n                }\n            });\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgClass.prototype._applyIterableChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) {\n                if (typeof record.item === 'string') {\n                    _this._toggleClass(record.item, true);\n                }\n                else {\n                    throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n                }\n            });\n            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n        };\n        /**\n         * @param {?} isCleanup\n         * @return {?}\n         */\n        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n            var _this = this;\n            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n        };\n        /**\n         * @param {?} rawClassVal\n         * @param {?} isCleanup\n         * @return {?}\n         */\n        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n            var _this = this;\n            if (rawClassVal) {\n                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                    ((rawClassVal)).forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n                }\n                else {\n                    Object.keys(rawClassVal).forEach(function (klass) {\n                        if (rawClassVal[klass] != null)\n                            _this._toggleClass(klass, !isCleanup);\n                    });\n                }\n            }\n        };\n        /**\n         * @param {?} klass\n         * @param {?} enabled\n         * @return {?}\n         */\n        NgClass.prototype._toggleClass = function (klass, enabled) {\n            var _this = this;\n            klass = klass.trim();\n            if (klass) {\n                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n            }\n        };\n        NgClass.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n        ];\n        /** @nocollapse */\n        NgClass.ctorParameters = function () { return [\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ]; };\n        NgClass.propDecorators = {\n            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n            'ngClass': [{ type: _angular_core.Input },],\n        };\n        return NgClass;\n    }());\n\n    var NgForRow = (function () {\n        /**\n         * @param {?} $implicit\n         * @param {?} index\n         * @param {?} count\n         */\n        function NgForRow($implicit, index, count) {\n            this.$implicit = $implicit;\n            this.index = index;\n            this.count = count;\n        }\n        Object.defineProperty(NgForRow.prototype, \"first\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"last\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index === this.count - 1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"even\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index % 2 === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"odd\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return !this.even; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgForRow;\n    }());\n    /**\n     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n     * each instantiated template inherits from the outer context with the given loop variable set\n     * to the current item from the iterable.\n     *\n     * ### Local Variables\n     *\n     * `NgFor` provides several exported values that can be aliased to local variables:\n     *\n     * * `index` will be set to the current loop iteration for each template context.\n     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n     *   iteration.\n     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n     *   iteration.\n     * * `even` will be set to a boolean value indicating whether this item has an even index.\n     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n     *\n     * ### Change Propagation\n     *\n     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n     *\n     * * When an item is added, a new instance of the template is added to the DOM.\n     * * When an item is removed, its template instance is removed from the DOM.\n     * * When items are reordered, their respective templates are reordered in the DOM.\n     * * Otherwise, the DOM element for that item will remain the same.\n     *\n     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n     * those changes in the DOM. This has important implications for animations and any stateful\n     * controls\n     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n     * as user input.\n     *\n     * It is possible for the identities of elements in the iterator to change while the data does not.\n     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n     * elements were deleted and all new elements inserted). This is an expensive operation and should\n     * be avoided if possible.\n     *\n     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n     * `trackBy` takes a function which has two arguments: `index` and `item`.\n     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n     *\n     * ### Syntax\n     *\n     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     *\n     * With `<template>` element:\n     *\n     * ```\n     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n     *   <li>...</li>\n     * </template>\n     * ```\n     *\n     * ### Example\n     *\n     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n     * example.\n     *\n     * \\@stable\n     */\n    var NgFor = (function () {\n        /**\n         * @param {?} _viewContainer\n         * @param {?} _template\n         * @param {?} _differs\n         * @param {?} _cdr\n         */\n        function NgFor(_viewContainer, _template, _differs, _cdr) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._differs = _differs;\n            this._cdr = _cdr;\n            this._differ = null;\n        }\n        Object.defineProperty(NgFor.prototype, \"ngForTrackBy\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._trackByFn; },\n            /**\n             * @param {?} fn\n             * @return {?}\n             */\n            set: function (fn) {\n                if (_angular_core.isDevMode() && fn != null && typeof fn !== 'function') {\n                    // TODO(vicb): use a log service once there is a public one available\n                    if ((console) && (console.warn)) {\n                        console.warn((\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \") +\n                            \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                    }\n                }\n                this._trackByFn = fn;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (value) {\n                    this._template = value;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgFor.prototype.ngOnChanges = function (changes) {\n            if ('ngForOf' in changes) {\n                // React on ngForOf changes only once all inputs have been initialized\n                var /** @type {?} */ value = changes['ngForOf'].currentValue;\n                if (!this._differ && value) {\n                    try {\n                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n                    }\n                    catch (e) {\n                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                    }\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgFor.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n                if (changes)\n                    this._applyChanges(changes);\n            }\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgFor.prototype._applyChanges = function (changes) {\n            var _this = this;\n            var /** @type {?} */ insertTuples = [];\n            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n                if (item.previousIndex == null) {\n                    var /** @type {?} */ view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n                    var /** @type {?} */ tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n                else if (currentIndex == null) {\n                    _this._viewContainer.remove(adjustedPreviousIndex);\n                }\n                else {\n                    var /** @type {?} */ view = _this._viewContainer.get(adjustedPreviousIndex);\n                    _this._viewContainer.move(view, currentIndex);\n                    var /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */ (view));\n                    insertTuples.push(tuple);\n                }\n            });\n            for (var /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n            }\n            for (var /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n                var /** @type {?} */ viewRef = (this._viewContainer.get(i));\n                viewRef.context.index = i;\n                viewRef.context.count = ilen;\n            }\n            changes.forEachIdentityChange(function (record) {\n                var /** @type {?} */ viewRef = (_this._viewContainer.get(record.currentIndex));\n                viewRef.context.$implicit = record.item;\n            });\n        };\n        /**\n         * @param {?} view\n         * @param {?} record\n         * @return {?}\n         */\n        NgFor.prototype._perViewChange = function (view, record) {\n            view.context.$implicit = record.item;\n        };\n        NgFor.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n        ];\n        /** @nocollapse */\n        NgFor.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.ChangeDetectorRef, },\n        ]; };\n        NgFor.propDecorators = {\n            'ngForOf': [{ type: _angular_core.Input },],\n            'ngForTrackBy': [{ type: _angular_core.Input },],\n            'ngForTemplate': [{ type: _angular_core.Input },],\n        };\n        return NgFor;\n    }());\n    var RecordViewTuple = (function () {\n        /**\n         * @param {?} record\n         * @param {?} view\n         */\n        function RecordViewTuple(record, view) {\n            this.record = record;\n            this.view = view;\n        }\n        return RecordViewTuple;\n    }());\n\n    /**\n     * Removes or recreates a portion of the DOM tree based on an {expression}.\n     *\n     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n     *\n     * ```\n     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n     *   <!-- Error message displayed when the errorCount property in the current context is greater\n     * than 0. -->\n     *   {{errorCount}} errors detected\n     * </div>\n     * ```\n     *\n     * ### Syntax\n     *\n     * - `<div *ngIf=\"condition\">...</div>`\n     * - `<div template=\"ngIf condition\">...</div>`\n     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n     *\n     * \\@stable\n     */\n    var NgIf = (function () {\n        /**\n         * @param {?} _viewContainer\n         * @param {?} _template\n         */\n        function NgIf(_viewContainer, _template) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._hasView = false;\n        }\n        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n            /**\n             * @param {?} condition\n             * @return {?}\n             */\n            set: function (condition) {\n                if (condition && !this._hasView) {\n                    this._hasView = true;\n                    this._viewContainer.createEmbeddedView(this._template);\n                }\n                else if (!condition && this._hasView) {\n                    this._hasView = false;\n                    this._viewContainer.clear();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgIf.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n        ];\n        /** @nocollapse */\n        NgIf.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n        ]; };\n        NgIf.propDecorators = {\n            'ngIf': [{ type: _angular_core.Input },],\n        };\n        return NgIf;\n    }());\n\n    var SwitchView = (function () {\n        /**\n         * @param {?} _viewContainerRef\n         * @param {?} _templateRef\n         */\n        function SwitchView(_viewContainerRef, _templateRef) {\n            this._viewContainerRef = _viewContainerRef;\n            this._templateRef = _templateRef;\n            this._created = false;\n        }\n        /**\n         * @return {?}\n         */\n        SwitchView.prototype.create = function () {\n            this._created = true;\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\n        };\n        /**\n         * @return {?}\n         */\n        SwitchView.prototype.destroy = function () {\n            this._created = false;\n            this._viewContainerRef.clear();\n        };\n        /**\n         * @param {?} created\n         * @return {?}\n         */\n        SwitchView.prototype.enforceState = function (created) {\n            if (created && !this._created) {\n                this.create();\n            }\n            else if (!created && this._created) {\n                this.destroy();\n            }\n        };\n        return SwitchView;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n     *             expression.\n     *\n     * \\@howToUse\n     * ```\n     *     <container-element [ngSwitch]=\"switch_expression\">\n     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n     *         <!-- use a ng-container to group multiple root nodes -->\n     *         <inner-element></inner-element>\n     *         <inner-other-element></inner-other-element>\n     *       </ng-container>\n     *       <some-element *ngSwitchDefault>...</some-element>\n     *     </container-element>\n     * ```\n     * \\@description\n     *\n     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n     * switch expression.\n     *\n     * In other words:\n     * - you define a container element (where you place the directive with a switch expression on the\n     * `[ngSwitch]=\"...\"` attribute)\n     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n     * root elements.\n     *\n     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n     * be preserved at the location.\n     *\n     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n     * expression is evaluated.\n     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n     * stamped out.\n     *\n     * \\@stable\n     */\n    var NgSwitch = (function () {\n        function NgSwitch() {\n            this._defaultUsed = false;\n            this._caseCount = 0;\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n            /**\n             * @param {?} newValue\n             * @return {?}\n             */\n            set: function (newValue) {\n                this._ngSwitch = newValue;\n                if (this._caseCount === 0) {\n                    this._updateDefaultCases(true);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n        /**\n         * \\@internal\n         * @param {?} view\n         * @return {?}\n         */\n        NgSwitch.prototype._addDefault = function (view) {\n            if (!this._defaultViews) {\n                this._defaultViews = [];\n            }\n            this._defaultViews.push(view);\n        };\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        NgSwitch.prototype._matchCase = function (value) {\n            var /** @type {?} */ matched = value == this._ngSwitch;\n            this._lastCasesMatched = this._lastCasesMatched || matched;\n            this._lastCaseCheckIndex++;\n            if (this._lastCaseCheckIndex === this._caseCount) {\n                this._updateDefaultCases(!this._lastCasesMatched);\n                this._lastCaseCheckIndex = 0;\n                this._lastCasesMatched = false;\n            }\n            return matched;\n        };\n        /**\n         * @param {?} useDefault\n         * @return {?}\n         */\n        NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n            if (this._defaultViews && useDefault !== this._defaultUsed) {\n                this._defaultUsed = useDefault;\n                for (var /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n                    var /** @type {?} */ defaultView = this._defaultViews[i];\n                    defaultView.enforceState(useDefault);\n                }\n            }\n        };\n        NgSwitch.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitch.ctorParameters = function () { return []; };\n        NgSwitch.propDecorators = {\n            'ngSwitch': [{ type: _angular_core.Input },],\n        };\n        return NgSwitch;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n     *             given expression evaluate to respectively the same/different value as the switch\n     *             expression.\n     *\n     * \\@howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     * </container-element>\n     * ```\n     * \\@description\n     *\n     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n     * expression.\n     *\n     * If multiple match expressions match the switch expression value, all of them are displayed.\n     *\n     * See {\\@link NgSwitch} for more details and example.\n     *\n     * \\@stable\n     */\n    var NgSwitchCase = (function () {\n        /**\n         * @param {?} viewContainer\n         * @param {?} templateRef\n         * @param {?} ngSwitch\n         */\n        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n            this.ngSwitch = ngSwitch;\n            ngSwitch._addCase();\n            this._view = new SwitchView(viewContainer, templateRef);\n        }\n        /**\n         * @return {?}\n         */\n        NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n        NgSwitchCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchCase.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        NgSwitchCase.propDecorators = {\n            'ngSwitchCase': [{ type: _angular_core.Input },],\n        };\n        return NgSwitchCase;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n     * match the\n     *             switch expression.\n     *\n     * \\@howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n     * </container-element>\n     * ```\n     *\n     * \\@description\n     *\n     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n     * expression.\n     *\n     * See {\\@link NgSwitch} for more details and example.\n     *\n     * \\@stable\n     */\n    var NgSwitchDefault = (function () {\n        /**\n         * @param {?} viewContainer\n         * @param {?} templateRef\n         * @param {?} ngSwitch\n         */\n        function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n            ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n        }\n        NgSwitchDefault.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchDefault.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        return NgSwitchDefault;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <template ngPluralCase=\"=0\">there is nothing</template>\n     *   <template ngPluralCase=\"=1\">there is one</template>\n     *   <template ngPluralCase=\"few\">there are a few</template>\n     * </some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n     * that match the switch expression's pluralization category.\n     *\n     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n     * expression:\n     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n     *   matches the switch expression exactly,\n     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n     *   value matches aren't found and the value maps to its category for the defined locale.\n     *\n     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n     *\n     * \\@experimental\n     */\n    var NgPlural = (function () {\n        /**\n         * @param {?} _localization\n         */\n        function NgPlural(_localization) {\n            this._localization = _localization;\n            this._caseViews = {};\n        }\n        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._switchValue = value;\n                this._updateView();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} value\n         * @param {?} switchView\n         * @return {?}\n         */\n        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n        /**\n         * @return {?}\n         */\n        NgPlural.prototype._updateView = function () {\n            this._clearViews();\n            var /** @type {?} */ cases = Object.keys(this._caseViews);\n            var /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n            this._activateView(this._caseViews[key]);\n        };\n        /**\n         * @return {?}\n         */\n        NgPlural.prototype._clearViews = function () {\n            if (this._activeView)\n                this._activeView.destroy();\n        };\n        /**\n         * @param {?} view\n         * @return {?}\n         */\n        NgPlural.prototype._activateView = function (view) {\n            if (view) {\n                this._activeView = view;\n                this._activeView.create();\n            }\n        };\n        NgPlural.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n        ];\n        /** @nocollapse */\n        NgPlural.ctorParameters = function () { return [\n            { type: NgLocalization, },\n        ]; };\n        NgPlural.propDecorators = {\n            'ngPlural': [{ type: _angular_core.Input },],\n        };\n        return NgPlural;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n     *             given expression matches the plural expression according to CLDR rules.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <template ngPluralCase=\"=0\">...</template>\n     *   <template ngPluralCase=\"other\">...</template>\n     * </some-element>\n     * ```\n     *\n     * See {\\@link NgPlural} for more details and example.\n     *\n     * \\@experimental\n     */\n    var NgPluralCase = (function () {\n        /**\n         * @param {?} value\n         * @param {?} template\n         * @param {?} viewContainer\n         * @param {?} ngPlural\n         */\n        function NgPluralCase(value, template, viewContainer, ngPlural) {\n            this.value = value;\n            var isANumber = !isNaN(Number(value));\n            ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n        }\n        NgPluralCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n        ];\n        /** @nocollapse */\n        NgPluralCase.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.ViewContainerRef, },\n            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        return NgPluralCase;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Update an HTML element styles.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"objExp\">...</some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * The styles are updated according to the value of the expression evaluation:\n     * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n     * - values are the values assigned to those properties (expressed in the given unit).\n     *\n     * \\@stable\n     */\n    var NgStyle = (function () {\n        /**\n         * @param {?} _differs\n         * @param {?} _ngEl\n         * @param {?} _renderer\n         */\n        function NgStyle(_differs, _ngEl, _renderer) {\n            this._differs = _differs;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n        }\n        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._ngStyle = v;\n                if (!this._differ && v) {\n                    this._differ = this._differs.find(v).create(null);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgStyle.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n                if (changes) {\n                    this._applyChanges(changes);\n                }\n            }\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgStyle.prototype._applyChanges = function (changes) {\n            var _this = this;\n            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        };\n        /**\n         * @param {?} nameAndUnit\n         * @param {?} value\n         * @return {?}\n         */\n        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n            value = value && unit ? \"\" + value + unit : value;\n            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n        };\n        NgStyle.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n        ];\n        /** @nocollapse */\n        NgStyle.ctorParameters = function () { return [\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ]; };\n        NgStyle.propDecorators = {\n            'ngStyle': [{ type: _angular_core.Input },],\n        };\n        return NgStyle;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n     *\n     * \\@howToUse\n     * ```\n     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n     *           [ngOutletContext]=\"objectExpression\">\n     * </template>\n     * ```\n     *\n     * \\@description\n     *\n     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n     * available within the `TemplateRef`.\n     *\n     * Note: using the key `$implicit` in the context object will set it's value as default.\n     *\n     * \\@experimental\n     */\n    var NgTemplateOutlet = (function () {\n        /**\n         * @param {?} _viewContainerRef\n         */\n        function NgTemplateOutlet(_viewContainerRef) {\n            this._viewContainerRef = _viewContainerRef;\n        }\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n            /**\n             * @param {?} context\n             * @return {?}\n             */\n            set: function (context) { this._context = context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n            /**\n             * @param {?} templateRef\n             * @return {?}\n             */\n            set: function (templateRef) { this._templateRef = templateRef; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this._templateRef) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n            }\n        };\n        NgTemplateOutlet.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n        ];\n        /** @nocollapse */\n        NgTemplateOutlet.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n        ]; };\n        NgTemplateOutlet.propDecorators = {\n            'ngOutletContext': [{ type: _angular_core.Input },],\n            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n        };\n        return NgTemplateOutlet;\n    }());\n\n    /**\n     * A collection of Angular directives that are likely to be used in each and every Angular\n     * application.\n     */\n    var /** @type {?} */ COMMON_DIRECTIVES = [\n        NgClass,\n        NgFor,\n        NgIf,\n        NgTemplateOutlet,\n        NgStyle,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgPlural,\n        NgPluralCase,\n    ];\n\n    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n    var /** @type {?} */ isObservable = _angular_core.__core_private__.isObservable;\n\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     */\n    var BaseError = (function (_super) {\n        __extends$4(BaseError, _super);\n        /**\n         * @param {?} message\n         */\n        function BaseError(message) {\n            _super.call(this, message);\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            // TODO(bradfordcsmith): Remove this hack when\n            //     google/closure-compiler/issues/2102 is fixed.\n            var nativeError = new Error(message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.message; },\n            /**\n             * @param {?} message\n             * @return {?}\n             */\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return ((this._nativeError)).stack; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) { ((this._nativeError)).stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * \\@stable\n     */\n    var WrappedError = (function (_super) {\n        __extends$4(WrappedError, _super);\n        /**\n         * @param {?} message\n         * @param {?} error\n         */\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var InvalidPipeArgumentError = (function (_super) {\n        __extends$3(InvalidPipeArgumentError, _super);\n        /**\n         * @param {?} type\n         * @param {?} value\n         */\n        function InvalidPipeArgumentError(type, value) {\n            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n        }\n        return InvalidPipeArgumentError;\n    }(BaseError));\n\n    var ObservableStrategy = (function () {\n        function ObservableStrategy() {\n        }\n        /**\n         * @param {?} async\n         * @param {?} updateLatestValue\n         * @return {?}\n         */\n        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n        };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n        return ObservableStrategy;\n    }());\n    var PromiseStrategy = (function () {\n        function PromiseStrategy() {\n        }\n        /**\n         * @param {?} async\n         * @param {?} updateLatestValue\n         * @return {?}\n         */\n        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.then(updateLatestValue, function (e) { throw e; });\n        };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        PromiseStrategy.prototype.dispose = function (subscription) { };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n        return PromiseStrategy;\n    }());\n    var /** @type {?} */ _promiseStrategy = new PromiseStrategy();\n    var /** @type {?} */ _observableStrategy = new ObservableStrategy();\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n     * \\@howToUse `observable_or_promise_expression | async`\n     * \\@description\n     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n     * potential memory leaks.\n     *\n     *\n     * ## Examples\n     *\n     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n     * promise.\n     *\n     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n     *\n     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n     * to the view. The Observable continuously updates the view with the current time.\n     *\n     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n     *\n     * \\@stable\n     */\n    var AsyncPipe = (function () {\n        /**\n         * @param {?} _ref\n         */\n        function AsyncPipe(_ref) {\n            this._ref = _ref;\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n            this._strategy = null;\n        }\n        /**\n         * @return {?}\n         */\n        AsyncPipe.prototype.ngOnDestroy = function () {\n            if (this._subscription) {\n                this._dispose();\n            }\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype.transform = function (obj) {\n            if (!this._obj) {\n                if (obj) {\n                    this._subscribe(obj);\n                }\n                this._latestReturnedValue = this._latestValue;\n                return this._latestValue;\n            }\n            if (obj !== this._obj) {\n                this._dispose();\n                return this.transform(obj);\n            }\n            if (this._latestValue === this._latestReturnedValue) {\n                return this._latestReturnedValue;\n            }\n            this._latestReturnedValue = this._latestValue;\n            return _angular_core.WrappedValue.wrap(this._latestValue);\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype._subscribe = function (obj) {\n            var _this = this;\n            this._obj = obj;\n            this._strategy = this._selectStrategy(obj);\n            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype._selectStrategy = function (obj) {\n            if (isPromise(obj)) {\n                return _promiseStrategy;\n            }\n            if (isObservable(obj)) {\n                return _observableStrategy;\n            }\n            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n        };\n        /**\n         * @return {?}\n         */\n        AsyncPipe.prototype._dispose = function () {\n            this._strategy.dispose(this._subscription);\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n        };\n        /**\n         * @param {?} async\n         * @param {?} value\n         * @return {?}\n         */\n        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n            if (async === this._obj) {\n                this._latestValue = value;\n                this._ref.markForCheck();\n            }\n        };\n        AsyncPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n        ];\n        /** @nocollapse */\n        AsyncPipe.ctorParameters = function () { return [\n            { type: _angular_core.ChangeDetectorRef, },\n        ]; };\n        return AsyncPipe;\n    }());\n\n    var NumberFormatStyle = {};\n    NumberFormatStyle.Decimal = 0;\n    NumberFormatStyle.Percent = 1;\n    NumberFormatStyle.Currency = 2;\n    NumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\n    NumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\n    NumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n    var NumberFormatter = (function () {\n        function NumberFormatter() {\n        }\n        /**\n         * @param {?} num\n         * @param {?} locale\n         * @param {?} style\n         * @param {?=} __3\n         * @return {?}\n         */\n        NumberFormatter.format = function (num, locale, style, _a) {\n            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n            var /** @type {?} */ options = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                minimumFractionDigits: minimumFractionDigits,\n                maximumFractionDigits: maximumFractionDigits,\n                style: NumberFormatStyle[style].toLowerCase()\n            };\n            if (style == NumberFormatStyle.Currency) {\n                options.currency = currency;\n                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n            }\n            return new Intl.NumberFormat(locale, options).format(num);\n        };\n        return NumberFormatter;\n    }());\n    var /** @type {?} */ DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n    var /** @type {?} */ PATTERN_ALIASES = {\n        // Keys are quoted so they do not get renamed during closure compilation.\n        'yMMMdjms': datePartGetterFactory(combine([\n            digitCondition('year', 1),\n            nameCondition('month', 3),\n            digitCondition('day', 1),\n            digitCondition('hour', 1),\n            digitCondition('minute', 1),\n            digitCondition('second', 1),\n        ])),\n        'yMdjm': datePartGetterFactory(combine([\n            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n            digitCondition('hour', 1), digitCondition('minute', 1)\n        ])),\n        'yMMMMEEEEd': datePartGetterFactory(combine([\n            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n            digitCondition('day', 1)\n        ])),\n        'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n        'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n        'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n        'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n        'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n    };\n    var /** @type {?} */ DATE_FORMATS = {\n        // Keys are quoted so they do not get renamed.\n        'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n        'yy': datePartGetterFactory(digitCondition('year', 2)),\n        'y': datePartGetterFactory(digitCondition('year', 1)),\n        'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n        'MMM': datePartGetterFactory(nameCondition('month', 3)),\n        'MM': datePartGetterFactory(digitCondition('month', 2)),\n        'M': datePartGetterFactory(digitCondition('month', 1)),\n        'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n        'L': datePartGetterFactory(nameCondition('month', 1)),\n        'dd': datePartGetterFactory(digitCondition('day', 2)),\n        'd': datePartGetterFactory(digitCondition('day', 1)),\n        'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n        'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n        'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n        'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        'jj': datePartGetterFactory(digitCondition('hour', 2)),\n        'j': datePartGetterFactory(digitCondition('hour', 1)),\n        'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n        'm': datePartGetterFactory(digitCondition('minute', 1)),\n        'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n        's': datePartGetterFactory(digitCondition('second', 1)),\n        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n        // fractions\n        'sss': datePartGetterFactory(digitCondition('second', 3)),\n        'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n        'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n        'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n        'E': datePartGetterFactory(nameCondition('weekday', 1)),\n        'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        'Z': timeZoneGetter('short'),\n        'z': timeZoneGetter('long'),\n        'ww': datePartGetterFactory({}),\n        // first Thursday of the year. not support ?\n        'w': datePartGetterFactory({}),\n        // of the year not support ?\n        'G': datePartGetterFactory(nameCondition('era', 1)),\n        'GG': datePartGetterFactory(nameCondition('era', 2)),\n        'GGG': datePartGetterFactory(nameCondition('era', 3)),\n        'GGGG': datePartGetterFactory(nameCondition('era', 4))\n    };\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function digitModifier(inner) {\n        return function (date, locale) {\n            var /** @type {?} */ result = inner(date, locale);\n            return result.length == 1 ? '0' + result : result;\n        };\n    }\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function hourClockExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n    }\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function hourExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n    }\n    /**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} options\n     * @return {?}\n     */\n    function intlDateFormat(date, locale, options) {\n        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * @param {?} timezone\n     * @return {?}\n     */\n    function timeZoneGetter(timezone) {\n        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n        var /** @type {?} */ options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n        return function (date, locale) {\n            var /** @type {?} */ result = intlDateFormat(date, locale, options);\n            // Then extract first 3 letters that related to hours\n            return result ? result.substring(3) : '';\n        };\n    }\n    /**\n     * @param {?} options\n     * @param {?} value\n     * @return {?}\n     */\n    function hour12Modify(options, value) {\n        options.hour12 = value;\n        return options;\n    }\n    /**\n     * @param {?} prop\n     * @param {?} len\n     * @return {?}\n     */\n    function digitCondition(prop, len) {\n        var /** @type {?} */ result = {};\n        result[prop] = len === 2 ? '2-digit' : 'numeric';\n        return result;\n    }\n    /**\n     * @param {?} prop\n     * @param {?} len\n     * @return {?}\n     */\n    function nameCondition(prop, len) {\n        var /** @type {?} */ result = {};\n        if (len < 4) {\n            result[prop] = len > 1 ? 'short' : 'narrow';\n        }\n        else {\n            result[prop] = 'long';\n        }\n        return result;\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    function combine(options) {\n        return (_a = ((Object))).assign.apply(_a, [{}].concat(options));\n        var _a;\n    }\n    /**\n     * @param {?} ret\n     * @return {?}\n     */\n    function datePartGetterFactory(ret) {\n        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n    }\n    var /** @type {?} */ DATE_FORMATTER_CACHE = new Map();\n    /**\n     * @param {?} format\n     * @param {?} date\n     * @param {?} locale\n     * @return {?}\n     */\n    function dateFormatter(format, date, locale) {\n        var /** @type {?} */ fn = PATTERN_ALIASES[format];\n        if (fn)\n            return fn(date, locale);\n        var /** @type {?} */ cacheKey = format;\n        var /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n        if (!parts) {\n            parts = [];\n            var /** @type {?} */ match = void 0;\n            DATE_FORMATS_SPLIT.exec(format);\n            while (format) {\n                match = DATE_FORMATS_SPLIT.exec(format);\n                if (match) {\n                    parts = parts.concat(match.slice(1));\n                    format = parts.pop();\n                }\n                else {\n                    parts.push(format);\n                    format = null;\n                }\n            }\n            DATE_FORMATTER_CACHE.set(cacheKey, parts);\n        }\n        return parts.reduce(function (text, part) {\n            var /** @type {?} */ fn = DATE_FORMATS[part];\n            return text + (fn ? fn(date, locale) : partToTime(part));\n        }, '');\n    }\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    function partToTime(part) {\n        return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    }\n    var DateFormatter = (function () {\n        function DateFormatter() {\n        }\n        /**\n         * @param {?} date\n         * @param {?} locale\n         * @param {?} pattern\n         * @return {?}\n         */\n        DateFormatter.format = function (date, locale, pattern) {\n            return dateFormatter(pattern, date, locale);\n        };\n        return DateFormatter;\n    }());\n\n    var /** @type {?} */ ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a date according to locale rules.\n     * \\@howToUse `date_expression | date[:format]`\n     * \\@description\n     *\n     * Where:\n     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n     * (https://www.w3.org/TR/NOTE-datetime).\n     * - `format` indicates which date/time components to include. The format can be predefined as\n     *   shown below or custom as shown in the table.\n     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n     *\n     *\n     *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n     *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n     *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n     *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n     *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n     *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n     *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n     *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n     *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n     *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n     *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n     *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n     *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n     *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n     *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n     *\n     * In javascript, only the components specified will be respected (not the ordering,\n     * punctuations, ...) and details of the formatting will be dependent on the locale.\n     *\n     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n     *\n     * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n     * applied and the formatted text will have the same day, month and year of the expression.\n     *\n     * WARNINGS:\n     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n     *   Instead users should treat the date as an immutable object and change the reference when the\n     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n     *   which would be an expensive operation).\n     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n     *   browsers.\n     *\n     * ### Examples\n     *\n     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n     * in the _local_ time and locale is 'en-US':\n     *\n     * ```\n     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n     * ```\n     *\n     * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n     *\n     * \\@stable\n     */\n    var DatePipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function DatePipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} pattern\n         * @return {?}\n         */\n        DatePipe.prototype.transform = function (value, pattern) {\n            if (pattern === void 0) { pattern = 'mediumDate'; }\n            var /** @type {?} */ date;\n            if (isBlank$1(value) || value !== value)\n                return null;\n            if (typeof value === 'string') {\n                value = value.trim();\n            }\n            if (isDate(value)) {\n                date = value;\n            }\n            else if (NumberWrapper.isNumeric(value)) {\n                date = new Date(parseFloat(value));\n            }\n            else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n                /**\n                * For ISO Strings without time the day, month and year must be extracted from the ISO String\n                * before Date creation to avoid time offset and errors in the new Date.\n                * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n                * date, some browsers (e.g. IE 9) will throw an invalid Date error\n                * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n                * is applied\n                * Note: ISO months are 0 for January, 1 for February, ...\n                */\n                var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n                date = new Date(y, m - 1, d);\n            }\n            else {\n                date = new Date(value);\n            }\n            if (!isDate(date)) {\n                var /** @type {?} */ match = void 0;\n                if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                    date = isoStringToDate(match);\n                }\n                else {\n                    throw new InvalidPipeArgumentError(DatePipe, value);\n                }\n            }\n            return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n        };\n        /** @internal */\n        DatePipe._ALIASES = {\n            'medium': 'yMMMdjms',\n            'short': 'yMdjm',\n            'fullDate': 'yMMMMEEEEd',\n            'longDate': 'yMMMMd',\n            'mediumDate': 'yMMMd',\n            'shortDate': 'yMd',\n            'mediumTime': 'jms',\n            'shortTime': 'jm'\n        };\n        DatePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n        ];\n        /** @nocollapse */\n        DatePipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return DatePipe;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank$1(obj) {\n        return obj == null || obj === '';\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isDate(obj) {\n        return obj instanceof Date && !isNaN(obj.valueOf());\n    }\n    /**\n     * @param {?} match\n     * @return {?}\n     */\n    function isoStringToDate(match) {\n        var /** @type {?} */ date = new Date(0);\n        var /** @type {?} */ tzHour = 0;\n        var /** @type {?} */ tzMin = 0;\n        var /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n        var /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n        if (match[9]) {\n            tzHour = toInt(match[9] + match[10]);\n            tzMin = toInt(match[9] + match[11]);\n        }\n        dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n        var /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n        var /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n        var /** @type {?} */ s = toInt(match[6] || '0');\n        var /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n        timeSetter.call(date, h, m, s, ms);\n        return date;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    function toInt(str) {\n        return parseInt(str, 10);\n    }\n\n    var /** @type {?} */ _INTERPOLATION_REGEXP = /#/g;\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n     * \\@howToUse `expression | i18nPlural:mapping`\n     * \\@description\n     *\n     *  Where:\n     *  - `expression` is a number.\n     *  - `mapping` is an object that mimics the ICU format, see\n     *    http://userguide.icu-project.org/formatparse/messages\n     *\n     *  ## Example\n     *\n     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n     *\n     * \\@experimental\n     */\n    var I18nPluralPipe = (function () {\n        /**\n         * @param {?} _localization\n         */\n        function I18nPluralPipe(_localization) {\n            this._localization = _localization;\n        }\n        /**\n         * @param {?} value\n         * @param {?} pluralMap\n         * @return {?}\n         */\n        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n            if (value == null)\n                return '';\n            if (typeof pluralMap !== 'object' || pluralMap === null) {\n                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n            }\n            var /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n        };\n        I18nPluralPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nPluralPipe.ctorParameters = function () { return [\n            { type: NgLocalization, },\n        ]; };\n        return I18nPluralPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Generic selector that displays the string that matches the current value.\n     * \\@howToUse `expression | i18nSelect:mapping`\n     * \\@description\n     *\n     *  Where `mapping` is an object that indicates the text that should be displayed\n     *  for different values of the provided `expression`.\n     *  If none of the keys of the mapping match the value of the `expression`, then the content\n     *  of the `other` key is returned when present, otherwise an empty string is returned.\n     *\n     *  ## Example\n     *\n     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n     *\n     *  \\@experimental\n     */\n    var I18nSelectPipe = (function () {\n        function I18nSelectPipe() {\n        }\n        /**\n         * @param {?} value\n         * @param {?} mapping\n         * @return {?}\n         */\n        I18nSelectPipe.prototype.transform = function (value, mapping) {\n            if (value == null)\n                return '';\n            if (typeof mapping !== 'object' || typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n            }\n            if (mapping.hasOwnProperty(value)) {\n                return mapping[value];\n            }\n            if (mapping.hasOwnProperty('other')) {\n                return mapping['other'];\n            }\n            return '';\n        };\n        I18nSelectPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nSelectPipe.ctorParameters = function () { return []; };\n        return I18nSelectPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Converts value into JSON string.\n     * \\@howToUse `expression | json`\n     * \\@description\n     *\n     * Converts value into string using `JSON.stringify`. Useful for debugging.\n     *\n     * ### Example\n     * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n     *\n     * \\@stable\n     */\n    var JsonPipe = (function () {\n        function JsonPipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n        JsonPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n        ];\n        /** @nocollapse */\n        JsonPipe.ctorParameters = function () { return []; };\n        return JsonPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Transforms string to lowercase.\n     * \\@howToUse `expression | lowercase`\n     * \\@description\n     *\n     * Converts value into a lowercase string using `String.prototype.toLowerCase()`.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * \\@stable\n     */\n    var LowerCasePipe = (function () {\n        function LowerCasePipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        LowerCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n            }\n            return value.toLowerCase();\n        };\n        LowerCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n        ];\n        /** @nocollapse */\n        LowerCasePipe.ctorParameters = function () { return []; };\n        return LowerCasePipe;\n    }());\n\n    var /** @type {?} */ _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n    /**\n     * @param {?} pipe\n     * @param {?} locale\n     * @param {?} value\n     * @param {?} style\n     * @param {?} digits\n     * @param {?=} currency\n     * @param {?=} currencyAsSymbol\n     * @return {?}\n     */\n    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n        if (currency === void 0) { currency = null; }\n        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n        if (value == null)\n            return null;\n        // Convert strings to numbers\n        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n        if (typeof value !== 'number') {\n            throw new InvalidPipeArgumentError(pipe, value);\n        }\n        var /** @type {?} */ minInt;\n        var /** @type {?} */ minFraction;\n        var /** @type {?} */ maxFraction;\n        if (style !== NumberFormatStyle.Currency) {\n            // rely on Intl default for currency\n            minInt = 1;\n            minFraction = 0;\n            maxFraction = 3;\n        }\n        if (digits) {\n            var /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digits + \" is not a valid digit info for number pipes\");\n            }\n            if (parts[1] != null) {\n                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n            }\n            if (parts[3] != null) {\n                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n            }\n            if (parts[5] != null) {\n                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n            }\n        }\n        return NumberFormatter.format(/** @type {?} */ (value), locale, style, {\n            minimumIntegerDigits: minInt,\n            minimumFractionDigits: minFraction,\n            maximumFractionDigits: maxFraction,\n            currency: currency,\n            currencyAsSymbol: currencyAsSymbol,\n        });\n    }\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number according to locale rules.\n     * \\@howToUse `number_expression | number[:digitInfo]`\n     *\n     * Formats a number as text. Group sizing and separator and other locale-specific\n     * configurations are based on the active locale.\n     *\n     * where `expression` is a number:\n     *  - `digitInfo` is a `string` which has a following format: <br>\n     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n     *\n     * For more information on the acceptable range for each of these numbers and other\n     * details see your native internationalization library.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n     *\n     * \\@stable\n     */\n    var DecimalPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function DecimalPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} digits\n         * @return {?}\n         */\n        DecimalPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n        };\n        DecimalPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n        ];\n        /** @nocollapse */\n        DecimalPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return DecimalPipe;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number as a percentage according to locale rules.\n     * \\@howToUse `number_expression | percent[:digitInfo]`\n     *\n     * \\@description\n     *\n     * Formats a number as percentage.\n     *\n     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n     *\n     * \\@stable\n     */\n    var PercentPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function PercentPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} digits\n         * @return {?}\n         */\n        PercentPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n        };\n        PercentPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n        ];\n        /** @nocollapse */\n        PercentPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return PercentPipe;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number as currency using locale rules.\n     * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n     * \\@description\n     *\n     * Use `currency` to format a number as currency.\n     *\n     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n     *    as `USD` for the US dollar and `EUR` for the euro.\n     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n     *   - `true`: use symbol (e.g. `$`).\n     *   - `false`(default): use code (e.g. `USD`).\n     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n     *\n     * \\@stable\n     */\n    var CurrencyPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function CurrencyPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} currencyCode\n         * @param {?=} symbolDisplay\n         * @param {?=} digits\n         * @return {?}\n         */\n        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n            if (currencyCode === void 0) { currencyCode = 'USD'; }\n            if (symbolDisplay === void 0) { symbolDisplay = false; }\n            if (digits === void 0) { digits = null; }\n            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n        };\n        CurrencyPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n        ];\n        /** @nocollapse */\n        CurrencyPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return CurrencyPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n     * \\@howToUse `array_or_string_expression | slice:start[:end]`\n     * \\@description\n     *\n     * Where the input expression is a `List` or `String`, and:\n     * - `start`: The starting index of the subset to return.\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * - `end`: The ending index of the subset to return.\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     *\n     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n     * and `String.prototype.slice()`.\n     *\n     * When operating on a [List], the returned list is always a copy even when all\n     * the elements are being returned.\n     *\n     * When operating on a blank value, the pipe returns the blank value.\n     *\n     * ## List Example\n     *\n     * This `ngFor` example:\n     *\n     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n     *\n     * produces the following:\n     *\n     *     <li>b</li>\n     *     <li>c</li>\n     *\n     * ## String Examples\n     *\n     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n     *\n     * \\@stable\n     */\n    var SlicePipe = (function () {\n        function SlicePipe() {\n        }\n        /**\n         * @param {?} value\n         * @param {?} start\n         * @param {?=} end\n         * @return {?}\n         */\n        SlicePipe.prototype.transform = function (value, start, end) {\n            if (value == null)\n                return value;\n            if (!this.supports(value)) {\n                throw new InvalidPipeArgumentError(SlicePipe, value);\n            }\n            return value.slice(start, end);\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n        SlicePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n        ];\n        /** @nocollapse */\n        SlicePipe.ctorParameters = function () { return []; };\n        return SlicePipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Transforms string to uppercase.\n     * \\@howToUse `expression | uppercase`\n     * \\@description\n     *\n     * Converts value into an uppercase string using `String.prototype.toUpperCase()`.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * \\@stable\n     */\n    var UpperCasePipe = (function () {\n        function UpperCasePipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        UpperCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n            }\n            return value.toUpperCase();\n        };\n        UpperCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n        ];\n        /** @nocollapse */\n        UpperCasePipe.ctorParameters = function () { return []; };\n        return UpperCasePipe;\n    }());\n\n    /**\n     * A collection of Angular pipes that are likely to be used in each and every application.\n     */\n    var /** @type {?} */ COMMON_PIPES = [\n        AsyncPipe,\n        UpperCasePipe,\n        LowerCasePipe,\n        JsonPipe,\n        SlicePipe,\n        DecimalPipe,\n        PercentPipe,\n        CurrencyPipe,\n        DatePipe,\n        I18nPluralPipe,\n        I18nSelectPipe,\n    ];\n\n    /**\n     * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgFor}, ...\n     *\n     * \\@stable\n     */\n    var CommonModule = (function () {\n        function CommonModule() {\n        }\n        CommonModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        providers: [\n                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n                        ],\n                    },] },\n        ];\n        /** @nocollapse */\n        CommonModule.ctorParameters = function () { return []; };\n        return CommonModule;\n    }());\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new _angular_core.Version('2.4.10');\n\n    exports.NgLocalization = NgLocalization;\n    exports.CommonModule = CommonModule;\n    exports.NgClass = NgClass;\n    exports.NgFor = NgFor;\n    exports.NgIf = NgIf;\n    exports.NgPlural = NgPlural;\n    exports.NgPluralCase = NgPluralCase;\n    exports.NgStyle = NgStyle;\n    exports.NgSwitch = NgSwitch;\n    exports.NgSwitchCase = NgSwitchCase;\n    exports.NgSwitchDefault = NgSwitchDefault;\n    exports.NgTemplateOutlet = NgTemplateOutlet;\n    exports.AsyncPipe = AsyncPipe;\n    exports.DatePipe = DatePipe;\n    exports.I18nPluralPipe = I18nPluralPipe;\n    exports.I18nSelectPipe = I18nSelectPipe;\n    exports.JsonPipe = JsonPipe;\n    exports.LowerCasePipe = LowerCasePipe;\n    exports.CurrencyPipe = CurrencyPipe;\n    exports.DecimalPipe = DecimalPipe;\n    exports.PercentPipe = PercentPipe;\n    exports.SlicePipe = SlicePipe;\n    exports.UpperCasePipe = UpperCasePipe;\n    exports.VERSION = VERSION;\n    exports.Version = _angular_core.Version;\n    exports.PlatformLocation = PlatformLocation;\n    exports.LOCATION_INITIALIZED = LOCATION_INITIALIZED;\n    exports.LocationStrategy = LocationStrategy;\n    exports.APP_BASE_HREF = APP_BASE_HREF;\n    exports.HashLocationStrategy = HashLocationStrategy;\n    exports.PathLocationStrategy = PathLocationStrategy;\n    exports.Location = Location;\n\n}));","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/pagination/pagination_controls_spec.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar util_1 = require('../../platform/testing/util');\nvar testing_1 = require('@angular/core/testing');\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar index_1 = require('./index');\nvar common_1 = require('@angular/common');\nvar forms_1 = require('@angular/forms');\nvar util_module_1 = require('../../core/util/util.module');\ndescribe('Pagination', function () {\n    util_1.componentSanityCheck('MdPaginationControls', 'md-pagination-controls', \"<md-pagination-controls></md-pagination-controls>\");\n    describe('MdPaginationControls', function () {\n        var TestComponent = (function () {\n            function TestComponent() {\n                this.page1 = {\n                    currentPage: 1,\n                    itemsPerPage: 30,\n                    totalItems: 65\n                };\n                this.page2 = {\n                    currentPage: 2,\n                    itemsPerPage: 30,\n                    totalItems: 65\n                };\n                this.page3 = {\n                    currentPage: 3,\n                    itemsPerPage: 30,\n                    totalItems: 65\n                };\n            }\n            TestComponent = __decorate([\n                core_1.Component({\n                    selector: 'test-app',\n                    template: \"<md-pagination-controls></md-pagination-controls>\"\n                }), \n                __metadata('design:paramtypes', [])\n            ], TestComponent);\n            return TestComponent;\n        }());\n        beforeEach(function () {\n            testing_1.TestBed.configureTestingModule({\n                declarations: [\n                    index_1.MdPaginationControls,\n                    TestComponent\n                ],\n                imports: [common_1.CommonModule, forms_1.FormsModule, util_module_1.MdServicesModule],\n                providers: [index_1.PaginationService]\n            });\n        });\n        function setup(template) {\n            if (template === void 0) { template = null; }\n            if (template) {\n                testing_1.TestBed.overrideComponent(TestComponent, {\n                    set: {\n                        template: template\n                    }\n                });\n            }\n            return testing_1.TestBed.compileComponents()\n                .then(function () {\n                var fixture = testing_1.TestBed.createComponent(TestComponent);\n                var debug = fixture.debugElement.query(platform_browser_1.By.css('md-pagination-controls'));\n                var comp = debug.componentInstance;\n                fixture.detectChanges();\n                return {\n                    fixture: fixture,\n                    comp: comp,\n                    debug: debug\n                };\n            })\n                .catch(function (error) { return console.error.bind(console); });\n        }\n        describe('default values', function () {\n            it('should have a default model', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.model.currentPage).toEqual(0);\n                    expect(api.comp.model.itemsPerPage).toEqual(0);\n                    expect(api.comp.model.totalItems).toEqual(0);\n                });\n            }));\n            it('should accept custom model', testing_1.async(function () {\n                return setup(\"<md-pagination-controls [model]=\\\"page2\\\"></md-pagination-controls>\").then(function (api) {\n                    expect(api.comp.model.currentPage).toEqual(2);\n                    expect(api.comp.model.itemsPerPage).toEqual(30);\n                    expect(api.comp.model.totalItems).toEqual(65);\n                });\n            }));\n            it('should have a default name', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.name).toEqual('default');\n                });\n            }));\n            it('should accept a custom name', testing_1.async(function () {\n                return setup(\"<md-pagination-controls name=\\\"book\\\"></md-pagination-controls>\").then(function (api) {\n                    expect(api.comp.name).toEqual('book');\n                });\n            }));\n        });\n        describe('construct', function () {\n            var updatedPagination = {\n                currentPage: 1,\n                itemsPerPage: 30,\n                totalItems: 65\n            };\n            it('should listen PaginationService', testing_1.async(function () {\n                return setup().then(function (api) {\n                    var service = testing_1.TestBed.get(index_1.PaginationService);\n                    service.onChange.subscribe(function (event) {\n                        expect(api.comp.model).toEqual(updatedPagination);\n                    });\n                    service.change('default', updatedPagination);\n                });\n            }));\n            it('should listen PaginationService only for his reference name', testing_1.async(function () {\n                return setup(\"<md-pagination-controls name=\\\"book\\\"></md-pagination-controls>\").then(function (api) {\n                    var service = testing_1.TestBed.get(index_1.PaginationService);\n                    service.onChange.subscribe(function () {\n                        expect(api.comp.model).toEqual({\n                            currentPage: 0,\n                            itemsPerPage: 0,\n                            totalItems: 0\n                        });\n                    });\n                    service.change('default', updatedPagination);\n                });\n            }));\n        });\n        describe('isFirstPage', function () {\n            it('should accept first page as first page', testing_1.async(function () {\n                return setup(\"<md-pagination-controls [model]=\\\"page1\\\"></md-pagination-controls>\").then(function (api) {\n                    expect(api.comp.isFirstPage()).toBeTruthy();\n                });\n            }));\n            it('should not accept second page as first page', testing_1.async(function () {\n                return setup(\"<md-pagination-controls [model]=\\\"page2\\\"></md-pagination-controls>\").then(function (api) {\n                    expect(api.comp.isFirstPage()).toBeFalsy();\n                });\n            }));\n        });\n        describe('isLastPage', function () {\n            it('should accept third page as last page', testing_1.async(function () {\n                return setup(\"<md-pagination-controls [model]=\\\"page3\\\"></md-pagination-controls>\").then(function (api) {\n                    expect(api.comp.isLastPage()).toBeTruthy();\n                });\n            }));\n            it('should not accept second page as last page', testing_1.async(function () {\n                return setup(\"<md-pagination-controls [model]=\\\"page2\\\"></md-pagination-controls>\").then(function (api) {\n                    expect(api.comp.isLastPage()).toBeFalsy();\n                });\n            }));\n        });\n        describe('previousPage', function () {\n            it('should call change of page to previous one', testing_1.async(function () {\n                return setup(\"<md-pagination-controls [model]=\\\"page2\\\"></md-pagination-controls>\").then(function (api) {\n                    spyOn(api.comp, 'changePage');\n                    api.comp.previousPage();\n                    expect(api.comp.changePage).toHaveBeenCalledWith(1);\n                });\n            }));\n        });\n        describe('nextPage', function () {\n            it('should call change of page to previous one', testing_1.async(function () {\n                return setup(\"<md-pagination-controls [model]=\\\"page2\\\"></md-pagination-controls>\").then(function (api) {\n                    spyOn(api.comp, 'changePage');\n                    api.comp.nextPage();\n                    expect(api.comp.changePage).toHaveBeenCalledWith(3);\n                });\n            }));\n        });\n        describe('changePage', function () {\n            it('should dispatch the new current page to the service', testing_1.async(function () {\n                return setup(\"<md-pagination-controls [model]=\\\"page2\\\"></md-pagination-controls>\").then(function (api) {\n                    var service = testing_1.TestBed.get(index_1.PaginationService);\n                    spyOn(service, 'change');\n                    api.comp.changePage(1);\n                    expect(service.change).toHaveBeenCalledWith('default', {\n                        currentPage: 1,\n                        itemsPerPage: 30,\n                        totalItems: 65\n                    });\n                });\n            }));\n        });\n    });\n});\n//# sourceMappingURL=pagination_controls_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/pagination/pagination_items_per_page_spec.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar util_1 = require('../../platform/testing/util');\nvar testing_1 = require('@angular/core/testing');\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar index_1 = require('./index');\nvar common_1 = require('@angular/common');\nvar forms_1 = require('@angular/forms');\nvar util_module_1 = require('../../core/util/util.module');\ndescribe('Pagination', function () {\n    util_1.componentSanityCheck('MdPaginationItemsPerPage', 'md-pagination-items-per-page', \"<md-pagination-items-per-page></md-pagination-items-per-page>\");\n    describe('MdPaginationItemsPerPage', function () {\n        var TestComponent = (function () {\n            function TestComponent() {\n                this.page1 = {\n                    currentPage: 1,\n                    itemsPerPage: 30,\n                    totalItems: 65\n                };\n                this.page2 = {\n                    currentPage: 2,\n                    itemsPerPage: 30,\n                    totalItems: 65\n                };\n                this.defaultItemsPerPageOptions = [10, 50, 100];\n            }\n            TestComponent = __decorate([\n                core_1.Component({\n                    selector: 'test-app',\n                    template: \"<md-pagination-items-per-page></md-pagination-items-per-page>\"\n                }), \n                __metadata('design:paramtypes', [])\n            ], TestComponent);\n            return TestComponent;\n        }());\n        beforeEach(function () {\n            testing_1.TestBed.configureTestingModule({\n                declarations: [\n                    index_1.MdPaginationItemsPerPage,\n                    TestComponent\n                ],\n                imports: [common_1.CommonModule, forms_1.FormsModule, util_module_1.MdServicesModule],\n                providers: [index_1.PaginationService]\n            });\n        });\n        function setup(template) {\n            if (template === void 0) { template = null; }\n            if (template) {\n                testing_1.TestBed.overrideComponent(TestComponent, {\n                    set: {\n                        template: template\n                    }\n                });\n            }\n            return testing_1.TestBed.compileComponents()\n                .then(function () {\n                var fixture = testing_1.TestBed.createComponent(TestComponent);\n                var debug = fixture.debugElement.query(platform_browser_1.By.css('md-pagination-items-per-page'));\n                var comp = debug.componentInstance;\n                fixture.detectChanges();\n                return {\n                    fixture: fixture,\n                    comp: comp,\n                    debug: debug\n                };\n            })\n                .catch(function (error) { return console.error.bind(console); });\n        }\n        describe('default values', function () {\n            it('should have a default model', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.model.currentPage).toEqual(0);\n                    expect(api.comp.model.itemsPerPage).toEqual(0);\n                    expect(api.comp.model.totalItems).toEqual(0);\n                });\n            }));\n            it('should accept custom model', testing_1.async(function () {\n                return setup(\"<md-pagination-items-per-page [model]=\\\"page2\\\"></md-pagination-items-per-page>\").then(function (api) {\n                    expect(api.comp.model.currentPage).toEqual(2);\n                    expect(api.comp.model.itemsPerPage).toEqual(30);\n                    expect(api.comp.model.totalItems).toEqual(65);\n                });\n            }));\n            it('should have a default name', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.name).toEqual('default');\n                });\n            }));\n            it('should accept a custom name', testing_1.async(function () {\n                return setup(\"<md-pagination-items-per-page name=\\\"book\\\"></md-pagination-items-per-page>\").then(function (api) {\n                    expect(api.comp.name).toEqual('book');\n                });\n            }));\n            it('should have a default prepended string', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.itemsPerPageBefore).toEqual('Rows per page:');\n                });\n            }));\n            it('should accept a custom prepended string', testing_1.async(function () {\n                return setup(\"<md-pagination-items-per-page items-per-page-before=\\\"Items per page:\\\"></md-pagination-items-per-page>\").then(function (api) {\n                    expect(api.comp.itemsPerPageBefore).toEqual('Items per page:');\n                });\n            }));\n            it('should not have a default appended string', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.itemsPerPageAfter).toBeUndefined();\n                });\n            }));\n            it('should accept a custom appended string', testing_1.async(function () {\n                return setup(\"<md-pagination-items-per-page items-per-page-after=\\\" - \\\"></md-pagination-items-per-page>\").then(function (api) {\n                    expect(api.comp.itemsPerPageAfter).toEqual(' - ');\n                });\n            }));\n            it('should have a empty list of options for items per page', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.itemsPerPageOptions).toEqual([]);\n                });\n            }));\n            it('should accept a custom list of options for items per page', testing_1.async(function () {\n                return setup(\"<md-pagination-items-per-page [items-per-page-options]=\\\"defaultItemsPerPageOptions\\\"></md-pagination-items-per-page>\").then(function (api) {\n                    expect(api.comp.itemsPerPageOptions).not.toContain(5);\n                    expect(api.comp.itemsPerPageOptions).toContain(10);\n                    expect(api.comp.itemsPerPageOptions).toContain(50);\n                    expect(api.comp.itemsPerPageOptions).toContain(100);\n                });\n            }));\n        });\n        describe('construct', function () {\n            var updatedPagination = {\n                currentPage: 1,\n                itemsPerPage: 30,\n                totalItems: 65\n            };\n            it('should listen PaginationService', testing_1.async(function () {\n                return setup().then(function (api) {\n                    var service = testing_1.TestBed.get(index_1.PaginationService);\n                    service.onChange.subscribe(function (event) {\n                        expect(api.comp.model).toEqual(updatedPagination);\n                    });\n                    service.change('default', updatedPagination);\n                });\n            }));\n            it('should listen PaginationService only for his reference name', testing_1.async(function () {\n                return setup(\"<md-pagination-items-per-page name=\\\"book\\\"></md-pagination-items-per-page>\").then(function (api) {\n                    var service = testing_1.TestBed.get(index_1.PaginationService);\n                    service.onChange.subscribe(function () {\n                        expect(api.comp.model.currentPage).toEqual(0);\n                        expect(api.comp.model.itemsPerPage).toEqual(0);\n                        expect(api.comp.model.totalItems).toEqual(0);\n                    });\n                    service.change('default', updatedPagination);\n                });\n            }));\n        });\n        describe('changePaginationLength', function () {\n            it('should dispatch page change to the service and reset to first page', testing_1.async(function () {\n                return setup(\"<md-pagination-items-per-page [model]=\\\"page2\\\"></md-pagination-items-per-page>\").then(function (api) {\n                    var service = testing_1.TestBed.get(index_1.PaginationService);\n                    spyOn(service, 'change');\n                    api.comp.changePaginationLength(50);\n                    expect(service.change).toHaveBeenCalledWith('default', {\n                        currentPage: 1,\n                        itemsPerPage: 50,\n                        totalItems: 65\n                    });\n                });\n            }));\n        });\n    });\n});\n//# sourceMappingURL=pagination_items_per_page_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/pagination/pagination_range_spec.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar util_1 = require('../../platform/testing/util');\nvar testing_1 = require('@angular/core/testing');\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar index_1 = require('./index');\nvar common_1 = require('@angular/common');\nvar forms_1 = require('@angular/forms');\nvar util_module_1 = require('../../core/util/util.module');\ndescribe('Pagination', function () {\n    util_1.componentSanityCheck('MdPaginationRange', 'md-pagination-range', \"<md-pagination-range></md-pagination-range>\");\n    describe('MdPaginationRange', function () {\n        var service;\n        var TestComponent = (function () {\n            function TestComponent() {\n                this.page2 = {\n                    currentPage: 2,\n                    itemsPerPage: 30,\n                    totalItems: 65\n                };\n                this.page3 = {\n                    currentPage: 3,\n                    itemsPerPage: 30,\n                    totalItems: 65\n                };\n                this.defaultRangeFormat = '{start}-{end} / {total}';\n            }\n            TestComponent = __decorate([\n                core_1.Component({\n                    selector: 'test-app',\n                    template: \"<md-pagination-range></md-pagination-range>\"\n                }), \n                __metadata('design:paramtypes', [])\n            ], TestComponent);\n            return TestComponent;\n        }());\n        beforeEach(function () {\n            testing_1.TestBed.configureTestingModule({\n                declarations: [\n                    index_1.MdPaginationRange,\n                    TestComponent\n                ],\n                imports: [common_1.CommonModule, forms_1.FormsModule, util_module_1.MdServicesModule],\n                providers: [index_1.PaginationService]\n            });\n        });\n        function setup(template) {\n            if (template === void 0) { template = null; }\n            if (template) {\n                testing_1.TestBed.overrideComponent(TestComponent, {\n                    set: {\n                        template: template\n                    }\n                });\n            }\n            var result = null;\n            return testing_1.TestBed.compileComponents()\n                .then(testing_1.inject([index_1.PaginationService], function (serv) {\n                service = serv;\n            }))\n                .then(function () {\n                var fixture = testing_1.TestBed.createComponent(TestComponent);\n                var debug = fixture.debugElement.query(platform_browser_1.By.css('md-pagination-range'));\n                var comp = debug.componentInstance;\n                fixture.detectChanges();\n                result = {\n                    fixture: fixture,\n                    comp: comp,\n                    debug: debug\n                };\n                return fixture.whenStable();\n            })\n                .then(function () { return result; })\n                .catch(function (error) { return console.error.bind(console); });\n        }\n        describe('default values', function () {\n            it('should have a default model', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.model.currentPage).toEqual(0);\n                    expect(api.comp.model.itemsPerPage).toEqual(0);\n                    expect(api.comp.model.totalItems).toEqual(0);\n                });\n            }));\n            it('should accept custom model', testing_1.async(function () {\n                return setup(\"<md-pagination-range [model]=\\\"page2\\\"></md-pagination-range>\").then(function (api) {\n                    expect(api.comp.model.currentPage).toEqual(2);\n                    expect(api.comp.model.itemsPerPage).toEqual(30);\n                    expect(api.comp.model.totalItems).toEqual(65);\n                });\n            }));\n            it('should have a default name', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.name).toEqual('default');\n                });\n            }));\n            it('should accept a custom name', testing_1.async(function () {\n                return setup(\"<md-pagination-range name=\\\"book\\\"></md-pagination-range>\").then(function (api) {\n                    expect(api.comp.name).toEqual('book');\n                });\n            }));\n            it('should have a default range format', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.computedRangeFormat).toEqual('{start}-{end} of {total}');\n                });\n            }));\n            it('should accept a custom range format', testing_1.async(function () {\n                return setup(\"<md-pagination-range [range-format]=\\\"defaultRangeFormat\\\"></md-pagination-range>\").then(function (api) {\n                    expect(api.comp.rangeFormat).toEqual('{start}-{end} / {total}');\n                });\n            }));\n        });\n        describe('construct', function () {\n            var service, updatedPagination = {\n                currentPage: 1,\n                itemsPerPage: 30,\n                totalItems: 65\n            };\n            it('should listen PaginationService', testing_1.async(function () {\n                return setup().then(function (api) {\n                    service = testing_1.TestBed.get(index_1.PaginationService);\n                    service.onChange.subscribe(function (event) {\n                        expect(api.comp.model).toEqual(updatedPagination);\n                    });\n                    service.change('default', updatedPagination);\n                });\n            }));\n            it('should listen PaginationService only for his reference name', testing_1.async(function () {\n                return setup(\"<md-pagination-range name=\\\"book\\\"></md-pagination-range>\").then(function (api) {\n                    service = testing_1.TestBed.get(index_1.PaginationService);\n                    service.onChange.subscribe(function () {\n                        expect(api.comp.model).toEqual({\n                            currentPage: 0,\n                            itemsPerPage: 0,\n                            totalItems: 0\n                        });\n                    });\n                    service.change('default', updatedPagination);\n                });\n            }));\n        });\n        describe('getFormattedValue', function () {\n            it('should replace pattern in the range format', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.getFormattedValue(1, 5, 30)).toEqual('1-5 of 30');\n                });\n            }));\n        });\n        describe('getRange', function () {\n            it('should calculate range at the middle', testing_1.async(function () {\n                return setup(\"<md-pagination-range [model]=\\\"page2\\\"></md-pagination-range>\").then(function (api) {\n                    spyOn(api.comp, 'getFormattedValue').and.callThrough();\n                    var result = api.comp.getRange();\n                    expect(result['changingThisBreaksApplicationSecurity']).toEqual('31-60 of 65');\n                    expect(api.comp.getFormattedValue).toHaveBeenCalledWith(31, 60, 65);\n                });\n            }));\n            it('should calculate range at the end', testing_1.async(function () {\n                return setup(\"<md-pagination-range [model]=\\\"page3\\\"></md-pagination-range>\").then(function (api) {\n                    spyOn(api.comp, 'getFormattedValue').and.callThrough();\n                    var result = api.comp.getRange();\n                    expect(result['changingThisBreaksApplicationSecurity']).toEqual('61-65 of 65');\n                    expect(api.comp.getFormattedValue).toHaveBeenCalledWith(61, 65, 65);\n                });\n            }));\n        });\n    });\n});\n//# sourceMappingURL=pagination_range_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/pagination/pagination_service.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar Subject_1 = require('rxjs/Subject');\nvar PaginationService = (function () {\n    function PaginationService() {\n        this.onChange = new Subject_1.Subject();\n    }\n    PaginationService.prototype.change = function (name, pagination) {\n        if (name === void 0) { name = 'default'; }\n        var newEvent = {\n            name: 'pagination_changed',\n            target: name,\n            pagination: pagination\n        };\n        this.onChange.next(newEvent);\n    };\n    PaginationService = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [])\n    ], PaginationService);\n    return PaginationService;\n}());\nexports.PaginationService = PaginationService;\n//# sourceMappingURL=pagination_service.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/pagination/pagination_spec.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar util_1 = require('../../platform/testing/util');\nvar testing_1 = require('@angular/core/testing');\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar index_1 = require('./index');\nvar common_1 = require('@angular/common');\nvar forms_1 = require('@angular/forms');\nvar util_module_1 = require('../../core/util/util.module');\ndescribe('Pagination', function () {\n    var service;\n    util_1.componentSanityCheck('MdPagination', 'md-pagination', \"<md-pagination></md-pagination>\");\n    describe('MdPagination', function () {\n        var TestComponent = (function () {\n            function TestComponent() {\n                this.defaultModel = {\n                    currentPage: 1,\n                    itemsPerPage: 5,\n                    totalItems: 24\n                };\n                this.defaultItemsPerPageOptions = [10, 50, 100];\n            }\n            TestComponent = __decorate([\n                core_1.Component({\n                    selector: 'test-app',\n                    template: \"<md-pagination></md-pagination>\"\n                }), \n                __metadata('design:paramtypes', [])\n            ], TestComponent);\n            return TestComponent;\n        }());\n        beforeEach(function () {\n            testing_1.TestBed.configureTestingModule({\n                declarations: [\n                    index_1.MdPagination,\n                    index_1.MdPaginationControls,\n                    index_1.MdPaginationItemsPerPage,\n                    index_1.MdPaginationRange,\n                    TestComponent\n                ],\n                imports: [common_1.CommonModule, forms_1.FormsModule, util_module_1.MdServicesModule],\n                providers: [index_1.PaginationService]\n            });\n        });\n        function setup(template) {\n            if (template === void 0) { template = null; }\n            if (template) {\n                testing_1.TestBed.overrideComponent(TestComponent, {\n                    set: {\n                        template: template\n                    }\n                });\n            }\n            return testing_1.TestBed.compileComponents()\n                .then(function () {\n                service = testing_1.TestBed.get(index_1.PaginationService);\n                spyOn(service, 'change');\n                var fixture = testing_1.TestBed.createComponent(TestComponent);\n                var debug = fixture.debugElement.query(platform_browser_1.By.css('md-pagination'));\n                var comp = debug.componentInstance;\n                fixture.detectChanges();\n                return {\n                    fixture: fixture,\n                    comp: comp,\n                    debug: debug\n                };\n            })\n                .catch(function (error) { return console.error.bind(console); });\n        }\n        describe('default values', function () {\n            it('should have a default model', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.model.currentPage).toEqual(0);\n                    expect(api.comp.model.itemsPerPage).toEqual(0);\n                    expect(api.comp.model.totalItems).toEqual(0);\n                });\n            }));\n            it('should accept custom model', testing_1.async(function () {\n                return setup(\"<md-pagination [model]=\\\"defaultModel\\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.model.currentPage).toEqual(1);\n                    expect(api.comp.model.itemsPerPage).toEqual(5);\n                    expect(api.comp.model.totalItems).toEqual(24);\n                });\n            }));\n            it('should have a default name', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.name).toEqual('default');\n                });\n            }));\n            it('should accept a custom name', testing_1.async(function () {\n                return setup(\"<md-pagination name=\\\"book\\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.name).toEqual('book');\n                });\n            }));\n            it('should display range by default', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.range).toBeTruthy();\n                });\n            }));\n            it('should accept a custom display for range', testing_1.async(function () {\n                return setup(\"<md-pagination [range]=\\\"false\\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.range).toBeFalsy();\n                });\n            }));\n            it('should not have a default rangeFormat', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.rangeFormat).toBeUndefined();\n                });\n            }));\n            it('should accept a custom rangeFormat', testing_1.async(function () {\n                return setup(\"<md-pagination range-format=\\\"{start}/{total}\\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.rangeFormat).toEqual('{start}/{total}');\n                });\n            }));\n            it('should display controls by default', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.controls).toBeTruthy();\n                });\n            }));\n            it('should accept a custom display for controls', testing_1.async(function () {\n                return setup(\"<md-pagination [controls]=\\\"false\\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.controls).toBeFalsy();\n                });\n            }));\n            it('should display items per page options by default', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.itemsPerPage).toBeTruthy();\n                });\n            }));\n            it('should accept a custom display for items per page', testing_1.async(function () {\n                return setup(\"<md-pagination [items-per-page]=\\\"false\\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.itemsPerPage).toBeFalsy();\n                });\n            }));\n            it('should not have a default prepended string to items per page', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.itemsPerPageBefore).toBeUndefined();\n                });\n            }));\n            it('should accept a custom prepended string to items per page', testing_1.async(function () {\n                return setup(\"<md-pagination items-per-page-before=\\\"page:\\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.itemsPerPageBefore).toEqual('page:');\n                });\n            }));\n            it('should not have a default appended string to items per page', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.itemsPerPageAfter).toBeUndefined();\n                });\n            }));\n            it('should accept a custom appended string to items per page', testing_1.async(function () {\n                return setup(\"<md-pagination items-per-page-after=\\\" - \\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.itemsPerPageAfter).toEqual(' - ');\n                });\n            }));\n            it('should not have a default list of options for items per page', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.comp.itemsPerPageOptions).toBeUndefined();\n                });\n            }));\n            it('should accept a custom list of options for items per page', testing_1.async(function () {\n                return setup(\"<md-pagination [items-per-page-options]=\\\"defaultItemsPerPageOptions\\\"></md-pagination>\").then(function (api) {\n                    expect(api.comp.itemsPerPageOptions).not.toContain(5);\n                    expect(api.comp.itemsPerPageOptions).toContain(10);\n                    expect(api.comp.itemsPerPageOptions).toContain(50);\n                    expect(api.comp.itemsPerPageOptions).toContain(100);\n                });\n            }));\n        });\n        describe('construct', function () {\n            var service;\n            var updatedPagination = {\n                currentPage: 2,\n                itemsPerPage: 30,\n                totalItems: 65\n            };\n            it('should listen PaginationService', testing_1.async(function () {\n                return setup().then(function (api) {\n                    api.comp.onPaginationChange.subscribe(function (event) {\n                        expect(event.name).toEqual('pagination_changed');\n                        expect(event.target).toEqual('default');\n                        expect(event.pagination).toEqual(updatedPagination);\n                    });\n                    service = testing_1.TestBed.get(index_1.PaginationService);\n                    service.change('default', updatedPagination);\n                });\n            }));\n            it('should listen PaginationService only for his reference name', testing_1.async(function () {\n                setup(\"<md-pagination name=\\\"book\\\"></md-pagination>\").then(function (api) {\n                    var spy = jasmine.createSpy('spy');\n                    api.comp.onPaginationChange.subscribe(spy);\n                    service = testing_1.TestBed.get(index_1.PaginationService);\n                    service.onChange.subscribe(function () {\n                        expect(spy).not.toHaveBeenCalled();\n                    });\n                    service.change('default', updatedPagination);\n                });\n            }));\n        });\n        describe('ngAfterContentInit', function () {\n            it('should init default components', testing_1.async(function () {\n                return setup().then(function (api) {\n                    var element = api.debug.nativeElement;\n                    api.fixture.detectChanges();\n                    expect(element.children.length).toEqual(3);\n                });\n            }));\n            it('should accept custom components as children', testing_1.async(function () {\n                return setup(\"<md-pagination><button></button></md-pagination>\").then(function (api) {\n                    var element = api.debug.nativeElement;\n                    api.fixture.detectChanges();\n                    expect(element.children.length).toEqual(1);\n                });\n            }));\n        });\n        describe('ngAfterViewInit', function () {\n            var defaultModel = {\n                currentPage: 1,\n                itemsPerPage: 30,\n                totalItems: 65\n            };\n            it('should dispatch his model after init', testing_1.async(function () {\n                return setup(\"<md-pagination name=\\\"book\\\" [model]=\\\"defaultModel\\\"></md-pagination>\").then(function (api) {\n                    expect(service.change).toHaveBeenCalled();\n                });\n            }));\n        });\n    });\n});\n//# sourceMappingURL=pagination_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/peekaboo/peekaboo.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar media_1 = require('../../core/util/media');\nvar viewport_1 = require('../../core/util/viewport');\nvar MdPeekaboo = (function () {\n    function MdPeekaboo(media, element, viewport, zone) {\n        var _this = this;\n        this.media = media;\n        this.element = element;\n        this.viewport = viewport;\n        this.zone = zone;\n        this.break = 100;\n        this._active = false;\n        this._breakXs = -1;\n        this._breakSm = -1;\n        this._breakMd = -1;\n        this._breakLg = -1;\n        this._breakXl = -1;\n        this._breakpoint = null;\n        this._scroller = null;\n        this._mediaListeners = [];\n        this._windowScroll = this.evaluate.bind(this);\n        MdPeekaboo.SIZES.forEach(function (size) {\n            _this._watchMediaQuery(size);\n            if (_this.media.hasMedia(size)) {\n                _this._breakpoint = size;\n            }\n        });\n        this.evaluate();\n    }\n    MdPeekaboo.MakeNumber = function (value) {\n        return typeof value === 'string' ? parseInt(value, 10) : value;\n    };\n    Object.defineProperty(MdPeekaboo.prototype, \"active\", {\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdPeekaboo.prototype, \"breakXs\", {\n        get: function () {\n            return this._breakXs;\n        },\n        set: function (value) {\n            this._breakXs = MdPeekaboo.MakeNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdPeekaboo.prototype, \"breakSm\", {\n        get: function () {\n            return this._breakSm;\n        },\n        set: function (value) {\n            this._breakSm = MdPeekaboo.MakeNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdPeekaboo.prototype, \"breakMd\", {\n        get: function () {\n            return this._breakMd;\n        },\n        set: function (value) {\n            this._breakMd = MdPeekaboo.MakeNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdPeekaboo.prototype, \"breakLg\", {\n        get: function () {\n            return this._breakLg;\n        },\n        set: function (value) {\n            this._breakLg = MdPeekaboo.MakeNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdPeekaboo.prototype, \"breakXl\", {\n        get: function () {\n            return this._breakXl;\n        },\n        set: function (value) {\n            this._breakXl = MdPeekaboo.MakeNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdPeekaboo.prototype, \"breakpoint\", {\n        get: function () {\n            return this._breakpoint;\n        },\n        set: function (size) {\n            this._breakpoint = size;\n            this.evaluate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdPeekaboo.prototype, \"scroller\", {\n        get: function () {\n            return this._scroller;\n        },\n        set: function (scroll) {\n            if (this._scroller) {\n                this._scroller.removeEventListener('scroll', this._windowScroll);\n            }\n            this._scroller = scroll;\n            if (this._scroller) {\n                this._scroller.addEventListener('scroll', this._windowScroll, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdPeekaboo.prototype.ngOnDestroy = function () {\n        this._mediaListeners.forEach(function (l) {\n            l.destroy();\n        });\n        this._mediaListeners = [];\n    };\n    MdPeekaboo.prototype._watchMediaQuery = function (size) {\n        var _this = this;\n        var l = this.media.listen(media_1.Media.getQuery(size));\n        l.onMatched.subscribe(function (mql) {\n            _this.breakpoint = size;\n        });\n        this._mediaListeners.push(l);\n    };\n    MdPeekaboo.prototype.evaluate = function () {\n        var _this = this;\n        var top = this._scroller ? this._scroller.scrollTop : this.viewport.scrollTop();\n        var bp = this.break;\n        switch (this._breakpoint) {\n            case 'xl':\n                if (this._breakXl !== -1) {\n                    bp = this._breakXl;\n                    break;\n                }\n            case 'lg':\n                if (this._breakLg !== -1) {\n                    bp = this._breakLg;\n                    break;\n                }\n            case 'md':\n                if (this._breakMd !== -1) {\n                    bp = this._breakMd;\n                    break;\n                }\n            case 'sm':\n                if (this._breakSm !== -1) {\n                    bp = this._breakSm;\n                    break;\n                }\n            case 'xs':\n                if (this._breakXs !== -1) {\n                    bp = this._breakXs;\n                    break;\n                }\n        }\n        if (top >= bp && !this._active) {\n            this.zone.run(function () {\n                _this._active = true;\n            });\n        }\n        else if (top < bp && this._active) {\n            this.zone.run(function () {\n                _this._active = false;\n            });\n        }\n        return bp;\n    };\n    MdPeekaboo.SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number)\n    ], MdPeekaboo.prototype, \"break\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], MdPeekaboo.prototype, \"breakAction\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number), \n        __metadata('design:paramtypes', [Number])\n    ], MdPeekaboo.prototype, \"breakXs\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number), \n        __metadata('design:paramtypes', [Number])\n    ], MdPeekaboo.prototype, \"breakSm\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number), \n        __metadata('design:paramtypes', [Number])\n    ], MdPeekaboo.prototype, \"breakMd\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number), \n        __metadata('design:paramtypes', [Number])\n    ], MdPeekaboo.prototype, \"breakLg\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number), \n        __metadata('design:paramtypes', [Number])\n    ], MdPeekaboo.prototype, \"breakXl\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object), \n        __metadata('design:paramtypes', [Object])\n    ], MdPeekaboo.prototype, \"scroller\", null);\n    MdPeekaboo = __decorate([\n        core_1.Directive({\n            selector: '[md-peekaboo]',\n            host: {\n                '[class.md-peekaboo-active]': 'active',\n                '[attr.breakAction]': 'breakAction',\n                '(window:scroll)': '_windowScroll($event)'\n            }\n        }), \n        __metadata('design:paramtypes', [media_1.Media, core_1.ElementRef, viewport_1.ViewportHelper, core_1.NgZone])\n    ], MdPeekaboo);\n    return MdPeekaboo;\n}());\nexports.MdPeekaboo = MdPeekaboo;\nvar MdPeekabooModule = (function () {\n    function MdPeekabooModule() {\n    }\n    MdPeekabooModule = __decorate([\n        core_1.NgModule({\n            declarations: [MdPeekaboo],\n            exports: [MdPeekaboo]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdPeekabooModule);\n    return MdPeekabooModule;\n}());\nexports.MdPeekabooModule = MdPeekabooModule;\n//# sourceMappingURL=peekaboo.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/util/media.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar viewport_1 = require(\"./viewport\");\nvar BehaviorSubject_1 = require(\"rxjs/BehaviorSubject\");\nexports.MEDIA = {\n    'xs': '(max-width: 599px)',\n    'gt-xs': '(min-width: 600px)',\n    'sm': '(min-width: 600px) and (max-width: 959px)',\n    'gt-sm': '(min-width: 960px)',\n    'md': '(min-width: 960px) and (max-width: 1279px)',\n    'gt-md': '(min-width: 1280px)',\n    'lg': '(min-width: 1280px) and (max-width: 1919px)',\n    'gt-lg': '(min-width: 1920px)',\n    'xl': '(min-width: 1920px)'\n};\nexports.MEDIA_PRIORITY = [\n    'xl',\n    'gt-lg',\n    'lg',\n    'gt-md',\n    'md',\n    'gt-sm',\n    'sm',\n    'gt-xs',\n    'xs'\n];\nvar MediaListener = (function () {\n    function MediaListener(query, zone, mql, media) {\n        this.query = query;\n        this.zone = zone;\n        this.mql = mql;\n        this.media = media;\n        this.onMatched = new BehaviorSubject_1.BehaviorSubject(this.mql);\n        this._destroyed = false;\n        var subject = this.onMatched;\n        this._listener = function (mql) {\n            zone.run(function () { return subject.next(mql); });\n        };\n        this.mql.addListener(this._listener);\n    }\n    Object.defineProperty(MediaListener.prototype, \"matches\", {\n        get: function () {\n            return !this._destroyed && this.mql.matches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MediaListener.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this.mql.removeListener(this._listener);\n            this.media.unregisterListener(this);\n            this._destroyed = true;\n            this._listener = null;\n            this.mql = null;\n        }\n    };\n    return MediaListener;\n}());\nexports.MediaListener = MediaListener;\nvar Media = (function () {\n    function Media(viewport, zone) {\n        this.viewport = viewport;\n        this.zone = zone;\n        this.cache = {};\n    }\n    Media.prototype.listen = function (query) {\n        var listener = this.cache[query];\n        if (!listener) {\n            listener = this.cache[query] = {\n                mql: this.viewport.matchMedia(query),\n                references: 0\n            };\n        }\n        listener.references++;\n        return new MediaListener(query, this.zone, listener.mql, this);\n    };\n    Media.prototype.unregisterListener = function (listener) {\n        var cached = this.cache[listener.query];\n        if (cached) {\n            cached.references--;\n            if (cached.references === 0) {\n                delete this.cache[listener.query];\n            }\n        }\n    };\n    Media.prototype.hasMedia = function (size) {\n        var query = Media.getQuery(size);\n        if (!query) {\n            return false;\n        }\n        return this.viewport.matchMedia(query).matches;\n    };\n    Media.getQuery = function (size) {\n        var query = exports.MEDIA[size];\n        if (!query) {\n            console.warn(\"unknown media query size \" + size + \". Expected one of [\" + exports.MEDIA_PRIORITY.join(',') + \"]\");\n            return null;\n        }\n        return query;\n    };\n    Media = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [viewport_1.ViewportHelper, core_1.NgZone])\n    ], Media);\n    return Media;\n}());\nexports.Media = Media;\n//# sourceMappingURL=media.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/peekaboo/peekaboo_spec.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar testing_1 = require('@angular/core/testing');\nvar core_1 = require('@angular/core');\nvar index_1 = require('../../index');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar util_module_1 = require('../../core/util/util.module');\nvar TestComponent = (function () {\n    function TestComponent() {\n        this.hideBinding = 'hide';\n        this.showBinding = 'show';\n        this.sizeBinding = 50;\n    }\n    TestComponent = __decorate([\n        core_1.Component({\n            selector: 'test-app',\n            template: \"<div md-peekaboo></div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], TestComponent);\n    return TestComponent;\n}());\ndescribe('Peekaboo', function () {\n    beforeEach(function () {\n        testing_1.TestBed.configureTestingModule({\n            declarations: [\n                index_1.MdPeekaboo,\n                TestComponent\n            ],\n            imports: [util_module_1.MdServicesModule],\n            providers: []\n        });\n    });\n    function setup(template) {\n        if (template === void 0) { template = null; }\n        if (template) {\n            testing_1.TestBed.overrideComponent(TestComponent, {\n                set: {\n                    template: template\n                }\n            });\n        }\n        return testing_1.TestBed.compileComponents()\n            .then(function () {\n            var fixture = testing_1.TestBed.createComponent(TestComponent);\n            fixture.detectChanges();\n            var debug = fixture.debugElement.query(platform_browser_1.By.directive(index_1.MdPeekaboo));\n            var component = debug.injector.get(index_1.MdPeekaboo);\n            return {\n                fixture: fixture,\n                peek: component,\n                debug: debug\n            };\n        })\n            .catch(function (error) { return console.error.bind(console); });\n    }\n    describe('[md-peekaboo]', function () {\n        it('should be inactive by default', testing_1.async(function () {\n            return setup().then(function (api) {\n                expect(api.peek.active).toBe(false);\n                api.fixture.destroy();\n            });\n        }));\n        describe('breakAction', function () {\n            it('should be undefined by default', testing_1.async(function () {\n                return setup().then(function (api) {\n                    expect(api.peek.breakAction).toBeUndefined();\n                });\n            }));\n            it('should be set by attribute', testing_1.async(function () {\n                return setup(\"<div md-peekaboo breakAction=\\\"show\\\"></div>\").then(function (api) {\n                    expect(api.peek.breakAction).toBe('show');\n                });\n            }));\n            it('should be set by binding', testing_1.async(function () {\n                return setup(\"<div md-peekaboo [breakAction]=\\\"hideBinding\\\"></div>\").then(function (api) {\n                    expect(api.peek.breakAction).toBe('hide');\n                });\n            }));\n        });\n        ['breakXs', 'breakSm', 'breakMd', 'breakLg', 'breakXl'].forEach(function (size) {\n            describe(size, function () {\n                it('should be -1 by default', testing_1.async(function () {\n                    return setup().then(function (api) {\n                        expect(api.peek[size]).toBe(-1);\n                    });\n                }));\n                it('should be set by attribute', testing_1.async(function () {\n                    return setup(\"<div md-peekaboo \" + size + \"=\\\"25\\\"></div>\").then(function (api) {\n                        expect(api.peek[size]).toBe(25);\n                    });\n                }));\n                it('should be set by binding', testing_1.async(function () {\n                    return setup(\"<div md-peekaboo [\" + size + \"]=\\\"sizeBinding\\\"></div>\").then(function (api) {\n                        expect(api.peek[size]).toBe(50);\n                    });\n                }));\n                it('should work with all breakpoint sizes', testing_1.async(function () {\n                    return setup(\"<div md-peekaboo [\" + size + \"]=\\\"sizeBinding\\\"></div>\").then(function (api) {\n                        index_1.MdPeekaboo.SIZES.forEach(function (s) {\n                            api.peek.breakpoint = s;\n                        });\n                    });\n                }));\n            });\n        });\n    });\n});\n//# sourceMappingURL=peekaboo_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/subheader/subheader.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar MdSubheader = (function () {\n    function MdSubheader() {\n    }\n    MdSubheader = __decorate([\n        core_1.Component({\n            selector: 'md-subheader',\n            host: {\n                'class': 'md-subheader'\n            },\n            template: \"\\n    <div class=\\\"md-subheader-inner\\\">\\n      <span class=\\\"md-subheader-content\\\"><ng-content></ng-content></span>\\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdSubheader);\n    return MdSubheader;\n}());\nvar MdSubheaderModule = (function () {\n    function MdSubheaderModule() {\n    }\n    MdSubheaderModule = __decorate([\n        core_1.NgModule({\n            declarations: [MdSubheader],\n            exports: [MdSubheader]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdSubheaderModule);\n    return MdSubheaderModule;\n}());\nexports.MdSubheaderModule = MdSubheaderModule;\n//# sourceMappingURL=subheader.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/components/subheader/subheader_spec.js":"\"use strict\";\nvar util_1 = require('../../platform/testing/util');\nutil_1.componentSanityCheck('Subheader', 'md-subheader', '<md-subheader></md-subheader>');\n//# sourceMappingURL=subheader_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/util/ink.js":"\"use strict\";\nvar animate_1 = require(\"./animate\");\nvar Ink = (function () {\n    function Ink() {\n    }\n    Ink.canApply = function (element) {\n        return !element.hasAttribute('md-no-ink');\n    };\n    Ink.getSize = function (fit, width, height) {\n        return fit\n            ? Math.max(width, height)\n            : Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n    };\n    Ink.ripple = function (element, left, top) {\n        var fit = !!element.getAttribute('md-fab');\n        var container = element.querySelector('.md-ripple-container');\n        if (!container) {\n            container = document.createElement('div');\n            container.classList.add('md-ripple-container');\n            element.appendChild(container);\n        }\n        var ripple = document.createElement('div');\n        ripple.classList.add('md-ripple');\n        var getInitialStyles = function () {\n            var color = window.getComputedStyle(element).color || 'rgb(0,0,0)';\n            var size = Ink.getSize(fit, element.clientWidth, element.clientHeight);\n            return {\n                'background-color': color,\n                left: left + \"px\",\n                top: top + \"px\",\n                width: size + \"px\",\n                height: size + \"px\"\n            };\n        };\n        return animate_1.Animate.setStyles(ripple, getInitialStyles())\n            .then(function () { return container.appendChild(ripple); })\n            .then(function () { return ripple.classList.add('md-ripple-placed'); })\n            .then(function () { return animate_1.Animate.wait(); })\n            .then(function () { return ripple.classList.add('md-ripple-scaled'); })\n            .then(function () { return ripple.classList.add('md-ripple-active'); })\n            .then(function () { return animate_1.Animate.wait(450); })\n            .then(function () { return ripple.classList.remove('md-ripple-active'); })\n            .then(function () { return animate_1.Animate.wait(650); })\n            .then(function () { return container.removeChild(ripple); });\n    };\n    Ink.rippleEvent = function (element, event) {\n        var rippleX = event.offsetX;\n        var rippleY = event.offsetY;\n        if (element !== event.srcElement) {\n            var rect = element.getBoundingClientRect();\n            rippleX = event.clientX - rect.left;\n            rippleY = event.clientY - rect.top;\n        }\n        return Ink.ripple(element, rippleX, rippleY);\n    };\n    return Ink;\n}());\nexports.Ink = Ink;\n//# sourceMappingURL=ink.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/util/ink_spec.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar testing_1 = require('@angular/core/testing');\nvar core_1 = require('@angular/core');\nvar ink_1 = require('./ink');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar defaultTemplate = \"<div md-ink></div>\";\nvar TestComponent = (function () {\n    function TestComponent() {\n    }\n    TestComponent = __decorate([\n        core_1.Component({\n            selector: 'ink-test-component',\n            template: defaultTemplate\n        }), \n        __metadata('design:paramtypes', [])\n    ], TestComponent);\n    return TestComponent;\n}());\ndescribe('Ink', function () {\n    beforeEach(function () {\n        testing_1.TestBed.configureTestingModule({\n            declarations: [\n                TestComponent\n            ],\n            providers: []\n        });\n    });\n    function setup(template) {\n        if (template === void 0) { template = null; }\n        if (template) {\n            testing_1.TestBed.overrideComponent(TestComponent, {\n                set: {\n                    template: template\n                }\n            });\n        }\n        return testing_1.TestBed.compileComponents()\n            .then(function () {\n            var fixture = testing_1.TestBed.createComponent(TestComponent);\n            fixture.detectChanges();\n            return fixture;\n        })\n            .catch(function (error) { return console.error.bind(console); });\n    }\n    describe('canApply', function () {\n        it('should return true if element does not have md-no-ink attribute', testing_1.async(function () {\n            setup(\"<div></div>\")\n                .then(function (api) {\n                var el = api.debugElement.query(platform_browser_1.By.css('div'));\n                expect(ink_1.Ink.canApply(el.nativeElement)).toBe(true);\n            });\n        }));\n        it('should return false if element does have md-no-ink attribute', testing_1.async(function () {\n            setup(\"<div md-no-ink></div>\")\n                .then(function (api) {\n                var el = api.debugElement.query(platform_browser_1.By.css('div'));\n                expect(ink_1.Ink.canApply(el.nativeElement)).toBe(false);\n            });\n        }));\n    });\n});\n//# sourceMappingURL=ink_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/util/media_spec.js":"\"use strict\";\nvar testing_1 = require('@angular/core/testing');\nvar media_1 = require('./media');\nvar index_1 = require('../../index');\ndescribe('MediaService', function () {\n    var smallQuery = media_1.Media.getQuery('sm');\n    var largeQuery = media_1.Media.getQuery('lg');\n    var m = null;\n    describe('listen', function () {\n        beforeEach(function () {\n            testing_1.TestBed.configureTestingModule({\n                declarations: [],\n                providers: [index_1.MATERIAL_BROWSER_PROVIDERS]\n            });\n        });\n        beforeEach(testing_1.inject([media_1.Media], function (media) {\n            m = media;\n        }));\n        it('should return a listener with the given query', function () {\n            var listener = m.listen(smallQuery);\n            expect(listener.query).toBe(smallQuery);\n            listener.destroy();\n        });\n        it('should reference count and share matchMedia listeners with the same query', function () {\n            expect(m.cache[largeQuery]).toBe(undefined);\n            var listener = m.listen(largeQuery);\n            expect(m.cache[largeQuery].references).toBe(1);\n            var another = m.listen(largeQuery);\n            expect(m.cache[largeQuery].references).toBe(2);\n            listener.destroy();\n            expect(m.cache[largeQuery].references).toBe(1);\n            another.destroy();\n            expect(m.cache[largeQuery]).toBe(undefined);\n        });\n    });\n});\n//# sourceMappingURL=media_spec.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/util/util.js":"\"use strict\";\nfunction parseTabIndexAttribute(attr) {\n    return !!attr ? parseInt(attr, 10) : 0;\n}\nexports.parseTabIndexAttribute = parseTabIndexAttribute;\nfunction isNumber(value) {\n    return Object.prototype.toString.call(value) === '[object Number]';\n}\nexports.isNumber = isNumber;\n//# sourceMappingURL=util.js.map","/home/travis/build/npmtest/node-npmtest-ng2-material/node_modules/ng2-material/core/util/util.module.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar viewport_1 = require('./viewport');\nvar core_1 = require('@angular/core');\nvar media_1 = require('./media');\nvar animate_1 = require('./animate');\nvar MdServicesModule = (function () {\n    function MdServicesModule() {\n    }\n    MdServicesModule = __decorate([\n        core_1.NgModule({\n            providers: [\n                { provide: viewport_1.ViewportHelper, useClass: viewport_1.BrowserViewportHelper },\n                media_1.Media,\n                animate_1.Animate\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdServicesModule);\n    return MdServicesModule;\n}());\nexports.MdServicesModule = MdServicesModule;\n//# sourceMappingURL=util.module.js.map"}